{"meta":{"generator":"0.10.0","format":20,"date":1624534988715},"custom":{"general":{"name":"General","files":{"welcome":{"name":"Welcome","type":"md","content":"# Welcome","path":"docs/general/welcome.md"}}},"examples":{"name":"Examples","files":{"ping":{"name":"Ping","type":"js","content":"","path":"docs/examples/ping.js"}}}},"classes":[{"name":"AxolotlClient","construct":{"name":"AxolotlClient","description":"Constructs the Axolotl Client","params":[{"name":"options","description":"The config to configure this and other extensions with.","optional":true,"default":"{}","type":[[["AxolotlClientOptions"]]]}]},"props":[{"name":"options","description":"The options the client was instantiated with.","type":[[["AxolotlClientOptions"]]],"meta":{"line":83,"file":"Client.js","path":"src/library"}},{"name":"userBaseDirectory","description":"The directory where the user files are located.","type":[[["string"]]],"meta":{"line":95,"file":"Client.js","path":"src/library"}},{"name":"console","description":"The console for this instance of Axolotl. You can disable timestamps, colors or add writable streams as configuration options to configure this.","type":[[["AxolotlConsole"]]],"meta":{"line":102,"file":"Client.js","path":"src/library"}},{"name":"commands","description":"The cache where commands are stored","type":[[["CommandStore"]]],"meta":{"line":109,"file":"Client.js","path":"src/library"}},{"name":"inhibitors","description":"The cache where inhibitors are stored","type":[[["InhibitorStore"]]],"meta":{"line":116,"file":"Client.js","path":"src/library"}},{"name":"monitors","description":"The cache where monitors are stored","type":[[["MonitorStore"]]],"meta":{"line":123,"file":"Client.js","path":"src/library"}},{"name":"providers","description":"The cache where providers are stored","type":[[["ProviderStore"]]],"meta":{"line":130,"file":"Client.js","path":"src/library"}},{"name":"events","description":"The cache where events are stored","type":[[["EventStore"]]],"meta":{"line":137,"file":"Client.js","path":"src/library"}},{"name":"tasks","description":"The cache where tasks are stored","type":[[["TaskStore"]]],"meta":{"line":144,"file":"Client.js","path":"src/library"}},{"name":"pieceStores","description":"The store registry","type":[[["external",":"]]],"meta":{"line":152,"file":"Client.js","path":"src/library"}},{"name":"gateways","description":"The GatewayDriver instance where the gateways are stored","type":[[["GatewayDriver"]]],"meta":{"line":159,"file":"Client.js","path":"src/library"}},{"name":"schedule","description":"The Schedule that runs the tasks","type":[[["Schedule"]]],"meta":{"line":187,"file":"Client.js","path":"src/library"}},{"name":"ready","description":"Whether the client is truly ready or not","type":[[["boolean"]]],"meta":{"line":194,"file":"Client.js","path":"src/library"}},{"name":"mentionPrefix","description":"The regexp for a prefix mention","type":[[["RegExp"]]],"meta":{"line":201,"file":"Client.js","path":"src/library"}},{"name":"owners","description":"The owners for this bot","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":216,"file":"Client.js","path":"src/library"}},{"name":"plugin","description":"The plugin symbol to be used in external packages","scope":"static","type":[[["Symbol"]]],"meta":{"line":288,"file":"Client.js","path":"src/library"}}],"methods":[{"name":"registerStore","description":"Registers a custom store to the client","params":[{"name":"store","description":"The store that pieces will be stored in","type":[[["Store"]]]}],"returns":[[["this"]]],"meta":{"line":231,"file":"Client.js","path":"src/library"}},{"name":"unregisterStore","description":"Un-registers a custom store from the client","params":[{"name":"storeName","description":"The store that pieces will be stored in","type":[[["Store"]]]}],"returns":[[["this"]]],"meta":{"line":243,"file":"Client.js","path":"src/library"}},{"name":"login","description":"Use this to login with your bot","async":true,"returns":[[["string"]]],"meta":{"line":253,"file":"Client.js","path":"src/library"}},{"name":"use","description":"Caches a plugin module to be used when creating a Axolotl instance","scope":"static","params":[{"name":"mod","description":"The module of the plugin to use","type":[[["Object"]]]}],"returns":[[["this"]]],"meta":{"line":272,"file":"Client.js","path":"src/library"}}],"events":[{"name":"axolotlReady","description":"Emitted when Axolotl is fully ready and initialized.","meta":{"line":290,"file":"Client.js","path":"src/library"}},{"name":"log","description":"A central logging event for AxolotlClient.","params":[{"name":"data","description":"The data to log","type":[[["string"]],[["Object"]]]}],"meta":{"line":296,"file":"Client.js","path":"src/library"}},{"name":"verbose","description":"An event for handling verbose logs","params":[{"name":"data","description":"The data to log","type":[[["string"]],[["Object"]]]}],"meta":{"line":303,"file":"Client.js","path":"src/library"}},{"name":"wtf","description":"An event for handling wtf logs (what a terrible failure)","params":[{"name":"data","description":"The data to log","type":[[["string"]],[["Object"]]]}],"meta":{"line":310,"file":"Client.js","path":"src/library"}},{"name":"commandUnknown","description":"Emitted when an unknown command is called.","params":[{"name":"message","description":"The message that triggered the command","type":[[["string"]]]},{"name":"command","description":"The command attempted to run","type":[[["string"]]]},{"name":"prefix","description":"The prefix used","type":[[["RegExp"]]]},{"name":"prefixLength","description":"The length of the prefix used","type":[[["number"]]]}],"meta":{"line":317,"file":"Client.js","path":"src/library"}},{"name":"commandInhibited","description":"Emitted when a command has been inhibited.","params":[{"name":"message","description":"The message that triggered the command","type":[[["string"]]]},{"name":"command","description":"The command triggered","type":[[["Command"]]]},{"name":"response","description":"The reason why it was inhibited if not silent","nullable":true,"type":[[["Array","<"],["string",">"]]]}],"meta":{"line":327,"file":"Client.js","path":"src/library"}},{"name":"commandRun","description":"Emitted when a command has been run.","params":[{"name":"message","description":"The message that triggered the command","type":[[["string"]]]},{"name":"command","description":"The command run","type":[[["Command"]]]},{"name":"args","description":"The raw arguments of the command","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":336,"file":"Client.js","path":"src/library"}},{"name":"commandSuccess","description":"Emitted when a command has been run.","params":[{"name":"message","description":"The message that triggered the command","type":[[["string"]]]},{"name":"command","description":"The command run","type":[[["Command"]]]},{"name":"params","description":"The resolved parameters of the command","type":[[["Array","<"],["any",">"]]]},{"name":"response","description":"Usually a response message, but whatever the command returned","nullable":true,"type":[[["any"]]]}],"meta":{"line":345,"file":"Client.js","path":"src/library"}},{"name":"commandError","description":"Emitted when a command has encountered an error.","params":[{"name":"message","description":"The message that triggered the command","type":[[["string"]]]},{"name":"command","description":"The command run","type":[[["Command"]]]},{"name":"params","description":"The resolved parameters of the command","type":[[["Array","<"],["any",">"]]]},{"name":"error","description":"The command error","type":[[["Object"]]]}],"meta":{"line":355,"file":"Client.js","path":"src/library"}},{"name":"eventError","description":"Emitted when an event has encountered an error.","params":[{"name":"event","description":"The event that errored","type":[[["Event"]]]},{"name":"args","description":"The event arguments","type":[[["Array","<"],["any",">"]]]},{"name":"error","description":"The event error","type":[[["string"]],[["Object"]]]}],"meta":{"line":365,"file":"Client.js","path":"src/library"}},{"name":"monitorError","description":"Emitted when a monitor has encountered an error.","params":[{"name":"message","description":"The message that triggered the monitor","type":[[["string"]]]},{"name":"monitor","description":"The monitor run","type":[[["Monitor"]]]},{"name":"error","description":"The monitor error","type":[[["Error"]],[["string"]]]}],"meta":{"line":374,"file":"Client.js","path":"src/library"}},{"name":"finalizerError","description":"Emitted when a finalizer has encountered an error.","params":[{"name":"message","description":"The message that triggered the finalizer","type":[[["string"]]]},{"name":"command","description":"The command this finalizer is for (may be different than message.command)","type":[[["Command"]]]},{"name":"response","description":"The response from the command","type":[[["string"]],[["any"]]]},{"name":"timer","description":"The timer run from start to queue of the command","type":[[["Stopwatch"]]]},{"name":"finalizer","description":"The finalizer run","type":[[["Finalizer"]]]},{"name":"error","description":"The finalizer error","type":[[["Error"]],[["string"]]]}],"meta":{"line":383,"file":"Client.js","path":"src/library"}},{"name":"taskError","description":"Emitted when a task has encountered an error.","params":[{"name":"scheduledTask","description":"The scheduled task","type":[[["ScheduledTask"]]]},{"name":"task","description":"The task run","type":[[["Task"]]]},{"name":"error","description":"The task error","type":[[["Error"]],[["string"]]]}],"meta":{"line":395,"file":"Client.js","path":"src/library"}},{"name":"pieceLoaded","description":"Emitted when a piece is loaded. (This can be spammy on bot startup or anytime you reload all of a piece type.)","params":[{"name":"piece","description":"The piece that was loaded","type":[[["Piece"]]]}],"meta":{"line":404,"file":"Client.js","path":"src/library"}},{"name":"pieceUnloaded","description":"Emitted when a piece is unloaded.","params":[{"name":"piece","description":"The piece that was unloaded","type":[[["Piece"]]]}],"meta":{"line":411,"file":"Client.js","path":"src/library"}},{"name":"pieceReloaded","description":"Emitted when a piece is reloaded.","params":[{"name":"piece","description":"The piece that was reloaded","type":[[["Piece"]]]}],"meta":{"line":418,"file":"Client.js","path":"src/library"}},{"name":"pieceEnabled","description":"Emitted when a piece is enabled.","params":[{"name":"piece","description":"The piece that was enabled","type":[[["Piece"]]]}],"meta":{"line":425,"file":"Client.js","path":"src/library"}},{"name":"pieceDisabled","description":"Emitted when a piece is disabled.","params":[{"name":"piece","description":"The piece that was disabled","type":[[["Piece"]]]}],"meta":{"line":432,"file":"Client.js","path":"src/library"}}],"meta":{"line":78,"file":"Client.js","path":"src/library"}},{"name":"Schedule","description":"<warning>Schedule is a singleton, use {@link AxolotlClient#schedule} instead.</warning>\nThe Schedule class that manages all scheduled tasks","construct":{"name":"Schedule","params":[{"name":"client","description":"The Client that initialized this instance","type":[[["AxolotlClient"]]]}]},"props":[{"name":"client","description":"The Client instance that initialized this instance","type":[[["AxolotlClient"]]],"meta":{"line":26,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"tasks","description":"An array of all processed ScheduledTask instances","type":[[["Array","<"],["ScheduledTask",">"]]],"meta":{"line":33,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"_interval","description":"The current interval that runs the tasks","access":"private","type":[[["NodeJSTimer"]]],"meta":{"line":41,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"_tasks","description":"Get all the tasks from the cache","access":"private","type":[[["Array","<"],["ScheduledTaskOptions",">"]]],"meta":{"line":50,"file":"Schedule.js","path":"src/library/schedule"}}],"methods":[{"name":"init","description":"Init the Schedule","async":true,"meta":{"line":58,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"execute","description":"Execute the current tasks","async":true,"meta":{"line":77,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"get","description":"Returns the next ScheduledTask from the id","params":[{"name":"id","description":"The id of the ScheduledTask you want","type":[[["string"]]]}],"returns":[[["ScheduledTask"]]],"meta":{"line":100,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"next","description":"Return the next ScheduledTask pending for execution","returns":[[["ScheduledTask"]]],"meta":{"line":108,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"create","description":"Adds a new task to the database","see":["https://en.wikipedia.org/wiki/Cron For more details"],"examples":["// Create a new reminder that ends in 2018-03-09T12:30:00.000Z (UTC)\nSchedule.create('reminder', new Date(Date.UTC(2018, 2, 9, 12, 30)), {\n    data: {\n        user: '242043489611808769',\n        db_id: 'jbifpb4f'\n    }\n});\n\n// Create a scheduled task that runs once a week\nSchedule.create('backup', '@weekly');\n\n// Or even, a weekly backup on Tuesday and Friday that fires at 00:00 (UTC)\nSchedule.create('backup', '0 0 * * tue,fri');\n\n// NOTE: It's highly advised ScheduledTaskOptions.data to be a small object or string,\n// as it being larger can cause a slowdown and memory increase. You can, however, have\n// a table in your database and query it by its entry id from the Task instance."],"params":[{"name":"taskName","description":"The name of the task","type":[[["string"]]]},{"name":"time","description":"The time or Cron pattern","type":[[["Date"]],[["number"]],[["string"]]]},{"name":"options","description":"The options for the ScheduleTask instance","optional":true,"type":[[["ScheduledTaskOptions"]]]}],"async":true,"returns":{"types":[[["ScheduledTask"]]],"nullable":true},"meta":{"line":139,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"delete","description":"Delete a Task by its ID","params":[{"name":"id","description":"The ID to search for","type":[[["string"]]]}],"async":true,"returns":[[["this"]]],"meta":{"line":152,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"clear","description":"Clear all the ScheduledTasks","async":true,"meta":{"line":168,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"_add","description":"Adds a task to the cache","access":"private","params":[{"name":"taskName","description":"The name of the task","type":[[["string"]]]},{"name":"time","description":"The time or Cron pattern","type":[[["Date"]],[["number"]],[["string"]]]},{"name":"options","description":"The options for the ScheduledTask instance","optional":true,"default":"{}","type":[[["ScheduledTaskOptions"]]]}],"async":true,"returns":{"types":[[["ScheduledTask"]]],"nullable":true},"meta":{"line":183,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"_insert","description":"Inserts the ScheduledTask instance in its sorted position for optimization","access":"private","params":[{"name":"task","description":"The ScheduledTask instance to insert","type":[[["ScheduledTask"]]]}],"returns":[[["ScheduledTask"]]],"meta":{"line":206,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"_clearInterval","description":"Clear the current interval","access":"private","meta":{"line":218,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"_checkInterval","description":"Sets the interval when needed","access":"private","meta":{"line":228,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"@@iterator","description":"Returns a new Iterator object that contains the values for each element contained in the task queue.","generator":true,"returns":[[["Iterator","<"],["ScheduledTask",">"]]],"meta":{"line":233,"file":"Schedule.js","path":"src/library/schedule"}}],"meta":{"line":7,"file":"Schedule.js","path":"src/library/schedule"}},{"name":"ScheduledTask","description":"The structure for future tasks to be run","construct":{"name":"ScheduledTask","description":"Initializes a new ScheduledTask","params":[{"name":"client","description":"The client that initialized this instance","type":[[["AxolotlClient"]]]},{"name":"taskName","description":"The name of the task this ScheduledTask is for","type":[[["string"]]]},{"name":"time","description":"The time or {@link Cron} pattern","type":[[["TimeResolvable"]]]},{"name":"options","description":"The options for this ScheduledTask instance","optional":true,"default":"{}","type":[[["ScheduledTaskOptions"]]]}]},"props":[{"name":"client","description":"The Client instance that initialized this instance","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":48,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"taskName","description":"The name of the Task this scheduled task will run","type":[[["string"]]],"meta":{"line":62,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"recurring","description":"Whether this scheduled task is scheduled with the {@link Cron} pattern","nullable":true,"type":[[["Cron"]]],"meta":{"line":69,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"time","description":"The Date when this scheduled task ends","type":[[["Date"]]],"meta":{"line":76,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"id","description":"The id for this scheduled task","type":[[["string"]]],"meta":{"line":83,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"catchUp","description":"If the task should catch up in the event the bot is down","type":[[["boolean"]]],"meta":{"line":90,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"data","description":"The stored metadata to send to the Task","type":[["*"]],"meta":{"line":97,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"running","description":"If the ScheduledTask is being run currently","access":"private","type":[[["boolean"]]],"meta":{"line":105,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"store","description":"The Schedule class that manages all scheduled tasks","readonly":true,"type":[[["Schedule"]]],"meta":{"line":110,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"task","description":"The Task instance this scheduled task will run","readonly":true,"nullable":true,"type":[[["Task"]]],"meta":{"line":127,"file":"ScheduledTask.js","path":"src/library/schedule"}}],"methods":[{"name":"run","description":"Run the current task and bump it if needed","async":true,"returns":[[["this"]]],"meta":{"line":136,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"update","description":"Update the task","examples":["// Update the data from the current scheduled task. Let's say I want to change the reminder content to remind me\n// another thing\nScheduledTask.update({ data: { content: 'Woo! I edited this reminder\\'s content!' } });\n\n// But you can also update the time this will end at, for example, to change it so it ends in 1 hour:\nScheduledTask.update({ time: Date.now() + 60000 * 60 });"],"params":[{"name":"options","description":"The options to update","optional":true,"default":"{}","type":[[["ScheduledTaskUpdateOptions"]]]}],"async":true,"returns":[[["this"]]],"meta":{"line":165,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"delete","description":"Delete the task","examples":["ScheduledTask.delete()\n    .then(() => console.log('Successfully deleted the task'))\n    .catch(console.error);"],"returns":[[["Promise","<"],["Schedule",">"]]],"meta":{"line":193,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"toJSON","description":"Override for JSON.stringify","returns":[[["ScheduledTaskJSON"]]],"meta":{"line":202,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"_resolveTime","description":"Resolve the time and cron","scope":"static","access":"private","params":[{"name":"time","description":"The time or {@link Cron} pattern","type":[[["TimeResolvable"]]]}],"returns":[[["Array","<"],["any",">"]]],"meta":{"line":220,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"_generateID","description":"Generate a new ID based on timestamp and shard","scope":"static","access":"private","params":[{"name":"client","description":"The Discord client","type":[[["AxolotlClient"]]]}],"returns":[[["string"]]],"meta":{"line":238,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"_validate","description":"Validate a task","scope":"static","access":"private","params":[{"name":"st","description":"The task to validate","type":[[["ScheduledTask"]]]}],"meta":{"line":248,"file":"ScheduledTask.js","path":"src/library/schedule"}}],"meta":{"line":7,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"Gateway","description":"<danger>You should never create a Gateway instance by yourself.\nPlease check {@link UnderstandingSettingsGateway} about how to construct your own Gateway.</danger>\nThe Gateway class that manages the data input, parsing, and output, of an entire database, while keeping a cache system sync with the changes.","extends":[[["GatewayStorage"]]],"construct":{"name":"Gateway","params":[{"name":"store","description":"The GatewayDriver instance which initiated this instance","type":[[["GatewayDriver"]]]},{"name":"type","description":"The name of this Gateway","type":[[["string"]]]},{"name":"schema","description":"The schema for this gateway","type":[[["Schema"]]]},{"name":"provider","description":"The provider's name for this gateway","type":[[["string"]]]}]},"props":[{"name":"store","description":"The GatewayDriver that manages this Gateway","type":[[["GatewayDriver"]]],"meta":{"line":28,"file":"Gateway.js","path":"src/library/settings"}},{"name":"cache","description":"The cached entries for this Gateway or the external datastore to get the settings from","type":[[["external",":"],["Collection","<"],["string",", "],["Settings",">"]],[["external",":"]]],"meta":{"line":35,"file":"Gateway.js","path":"src/library/settings"}},{"name":"syncQueue","description":"The synchronization queue for all Settings instances","type":[[["external",":"],["Collection","<"],["string",", "],["Promise","<"],["Settings",">>"]]],"meta":{"line":42,"file":"Gateway.js","path":"src/library/settings"}},{"name":"Settings","description":"The Settings that this class should make.","access":"private","readonly":true,"type":[[["Settings"]]],"meta":{"line":59,"file":"Gateway.js","path":"src/library/settings"}},{"name":"client","description":"The client this GatewayStorage was created with.","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":32,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"type","description":"The type of this GatewayStorage.","readonly":true,"type":[[["string"]]],"meta":{"line":41,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"providerName","description":"The name of this instance's provider.","readonly":true,"type":[[["string"]]],"meta":{"line":50,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"schema","type":[[["Schema"]]],"meta":{"line":63,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"ready","type":[[["boolean"]]],"meta":{"line":69,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"provider","description":"Get the provider that manages the persistent data.","readonly":true,"nullable":true,"type":[[["Provider"]]],"meta":{"line":78,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"defaults","description":"Get this gateway's defaults.","readonly":true,"type":[[["Object"]]],"meta":{"line":88,"file":"GatewayStorage.js","path":"src/library/settings"}}],"methods":[{"name":"get","description":"Get an entry from the cache.","params":[{"name":"id","description":"The key to get from the cache","type":[[["string"]]]},{"name":"create","description":"Whether SG should create a new instance of Settings in the background, if the entry does not already exist.","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":{"types":[[["Settings"]]],"nullable":true},"meta":{"line":70,"file":"Gateway.js","path":"src/library/settings"}},{"name":"sync","description":"Sync either all entries from the cache with the persistent database, or a single one.","params":[{"name":"input","description":"An object containing a id property, like discord.js objects, or a string","optional":true,"default":"Array<string>","type":[[["Array","<"],["string",">"]],[["string"]]]}],"async":true,"returns":{"types":[[["Gateway"]],[["Settings"]]],"nullable":true},"meta":{"line":87,"file":"Gateway.js","path":"src/library/settings"}},{"name":"getPath","description":"Resolve a path from a string.","inherits":"GatewayStorage#getPath","inherited":true,"params":[{"name":"key","description":"A string to resolve","optional":true,"default":null,"type":[[["string"]]]},{"name":"options","description":"Whether the Gateway should avoid configuring the selected key","optional":true,"default":"{}","type":[[["GatewayGetPathOptions"]]]}],"returns":{"types":[[["GatewayGetPathResult"]]],"nullable":true},"meta":{"line":99,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"init","description":"Inits the current Gateway.","inherits":"GatewayStorage#init","inherited":true,"async":true,"meta":{"line":144,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"toJSON","description":"Get a JSON object containing the schema and options.","inherits":"GatewayStorage#toJSON","inherited":true,"returns":[[["GatewayJSON"]]],"meta":{"line":188,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"toString","description":"Stringify a value or the instance itself.","inherits":"GatewayStorage#toString","inherited":true,"returns":[[["string"]]],"meta":{"line":201,"file":"GatewayStorage.js","path":"src/library/settings"}}],"meta":{"line":11,"file":"Gateway.js","path":"src/library/settings"}},{"name":"GatewayDriver","description":"<warning>GatewayDriver is a singleton, use {@link AxolotlClient#gateways} instead.</warning>\nGateway's driver to make new instances of it, with the purpose to handle different databases simultaneously.","construct":{"name":"GatewayDriver","params":[{"name":"client","description":"The axolotl client","type":[[["AxolotlClient"]]]}]},"props":[{"name":"client","description":"The client this GatewayDriver was created with.","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":22,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"_queue","description":"The register creation queue.","access":"private","readonly":true,"type":[[["Array","<"],["function","()>"]]],"meta":{"line":31,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"keys","description":"All the gateways added","type":[[["Set","<"],["string",">"]]],"meta":{"line":45,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"guilds","description":"The Gateway that manages per-guild data","nullable":true,"type":[[["Gateway"]]],"meta":{"line":51,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"users","description":"The Gateway that manages per-user data","nullable":true,"type":[[["Gateway"]]],"meta":{"line":57,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"clientStorage","description":"The Gateway that manages per-client data","nullable":true,"type":[[["Gateway"]]],"meta":{"line":63,"file":"GatewayDriver.js","path":"src/library/settings"}}],"methods":[{"name":"register","description":"Registers a new Gateway.","params":[{"name":"name","description":"The name for the new gateway","type":[[["string"]]]},{"name":"options","description":"The options for the new gateway","optional":true,"default":"{}","type":[[["GatewayDriverRegisterOptions"]]]}],"returns":[[["this"]]],"meta":{"line":75,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"init","description":"Initializes all gateways from the queue","async":true,"meta":{"line":92,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"sync","description":"Sync all gateways","params":[{"name":"input","description":"The arguments to pass to each Gateway#sync","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":[[["Promise","<"],["Array","<"],["Gateway",">>"]]],"meta":{"line":103,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"@@iterator","description":"Returns a new Iterator object that contains the values for each gateway contained in this driver.","generator":true,"returns":[[["Iterator","<"],["Array","<("],["string","|"],["Gateway",")>>"]]],"meta":{"line":107,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"toJSON","description":"The GatewayDriver with all gateways, types and keys as JSON.","returns":[[["Object"]]],"meta":{"line":127,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"toString","description":"The stringified GatewayDriver with all the managed gateways.","returns":[[["string"]]],"meta":{"line":140,"file":"GatewayDriver.js","path":"src/library/settings"}}],"meta":{"line":8,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"GatewayStorage","access":"private","construct":{"name":"GatewayStorage","description":"<warning>You should never create an instance of this class as it's abstract.</warning>","params":[{"name":"client","description":"The client this GatewayStorage was created with","type":[[["AxolotlClient"]]]},{"name":"type","description":"The name of this GatewayStorage","type":[[["string"]]]},{"name":"schema","description":"The schema for this gateway","type":[[["Schema"]]]},{"name":"provider","description":"The provider's name","optional":true,"type":[[["string"]]]}]},"props":[{"name":"client","description":"The client this GatewayStorage was created with.","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":32,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"type","description":"The type of this GatewayStorage.","readonly":true,"type":[[["string"]]],"meta":{"line":41,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"providerName","description":"The name of this instance's provider.","readonly":true,"type":[[["string"]]],"meta":{"line":50,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"schema","type":[[["Schema"]]],"meta":{"line":63,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"ready","type":[[["boolean"]]],"meta":{"line":69,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"provider","description":"Get the provider that manages the persistent data.","readonly":true,"nullable":true,"type":[[["Provider"]]],"meta":{"line":78,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"defaults","description":"Get this gateway's defaults.","readonly":true,"type":[[["Object"]]],"meta":{"line":88,"file":"GatewayStorage.js","path":"src/library/settings"}}],"methods":[{"name":"getPath","description":"Resolve a path from a string.","params":[{"name":"key","description":"A string to resolve","optional":true,"default":null,"type":[[["string"]]]},{"name":"options","description":"Whether the Gateway should avoid configuring the selected key","optional":true,"default":"{}","type":[[["GatewayGetPathOptions"]]]}],"returns":{"types":[[["GatewayGetPathResult"]]],"nullable":true},"meta":{"line":99,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"init","description":"Inits the current Gateway.","async":true,"meta":{"line":144,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"toJSON","description":"Get a JSON object containing the schema and options.","returns":[[["GatewayJSON"]]],"meta":{"line":188,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"toString","description":"Stringify a value or the instance itself.","returns":[[["string"]]],"meta":{"line":201,"file":"GatewayStorage.js","path":"src/library/settings"}}],"meta":{"line":31,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"Schema","description":"The base Schema for {@link Gateway}s","extends":[[["Map"]]],"construct":{"name":"Schema","params":[{"name":"basePath","description":"The base schema path","optional":true,"default":"''","type":[[["string"]]]}]},"props":[{"name":"path","description":"Returns the path for this schema","readonly":true,"type":[[["string"]]],"meta":{"line":16,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"configurableKeys","description":"Get the configurable keys for the current SchemaFolder or Schema instance","readonly":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":41,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"defaults","description":"Get the defaults for the current SchemaFolder or Schema instance","readonly":true,"type":[[["Object"]]],"meta":{"line":53,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"paths","description":"Get the paths for the current SchemaFolder or Schema instance","readonly":true,"type":[[["Map","<"],["string",", ("],["SchemaFolder","|"],["SchemaPiece",")>"]]],"meta":{"line":63,"file":"Schema.js","path":"src/library/settings/schema"}}],"methods":[{"name":"add","description":"Adds a Folder or Piece instance to the current SchemaFolder or Schema instance","examples":["// callback is always passed the created folder to encourage chaining\nSchema.add('folder', (folder) => folder.add('piece', 'textchannel'));\n// or\nSchema.add('piece', 'string', { default: 'axolotl!' });"],"params":[{"name":"key","description":"The name of this new piece you are trying to add.","type":[[["string"]]]},{"name":"typeOrCallback","description":"A function to add a folder or a string to add a new SchemaPiece","type":[[["string"]],[["function"]]]},{"name":"options","description":"An object of options used for SchemaPieces","optional":true,"type":[[["SchemaPieceOptions"]]]}],"returns":[[["this"]]],"meta":{"line":83,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"remove","description":"Remove a key from the schema","params":[{"name":"key","description":"The key to remove","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":133,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"get","description":"Get a SchemaPiece or a SchemaFolder given a path","params":[{"name":"key","description":"The key to get from the schema","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":[[["SchemaPiece"]],[["SchemaFolder"]]],"meta":{"line":144,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"keys","description":"Returns a new Iterator object that contains the keys for each element contained in this folder.\nIdentical to [Map.keys()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys)","params":[{"name":"recursive","description":"Whether the iteration should be recursive","default":false,"type":[[["boolean"]]]}],"generator":true,"meta":{"line":159,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"values","description":"Returns a new Iterator object that contains the values for each element contained in this folder.\nIdentical to [Map.values()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values)","params":[{"name":"recursive","description":"Whether the iteration should be recursive","default":false,"type":[[["boolean"]]]}],"generator":true,"meta":{"line":177,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"entries","description":"Returns a new Iterator object that contains the `[key, value]` pairs for each element contained in this folder.\nIdentical to [Map.entries()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries)","params":[{"name":"recursive","description":"Whether the iteration should be recursive","default":false,"type":[[["boolean"]]]}],"generator":true,"meta":{"line":195,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"toJSON","description":"Get a JSON object containing data from this SchemaFolder","returns":[[["Object"]]],"meta":{"line":211,"file":"Schema.js","path":"src/library/settings/schema"}}],"meta":{"line":8,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"SchemaFolder","description":"A Folder for organizing {@link SchemaPiece}s","extends":[[["Schema"]]],"construct":{"name":"SchemaFolder","params":[{"name":"parent","description":"The parent folder or schema for this folder instance","type":[[["SchemaFolder"]],[["Schema"]]]},{"name":"key","description":"The name of this folder instance","type":[[["string"]]]}]},"props":[{"name":"type","description":"The type of this SchemaFolder (always 'Folder')","readonly":true,"type":[[["string"]]],"meta":{"line":25,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"parent","description":"The parent of this SchemaFolder","readonly":true,"type":[[["Schema"]],[["SchemaFolder"]]],"meta":{"line":17,"file":"SchemaFolder.js","path":"src/library/settings/schema"}},{"name":"key","description":"The name of this SchemaFolder","readonly":true,"type":[[["string"]]],"meta":{"line":26,"file":"SchemaFolder.js","path":"src/library/settings/schema"}},{"name":"path","description":"Returns the path for this schema","readonly":true,"type":[[["string"]]],"meta":{"line":16,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"configurableKeys","description":"Get the configurable keys for the current SchemaFolder or Schema instance","readonly":true,"type":[[["Array","<"],["string",">"]]],"meta":{"line":41,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"defaults","description":"Get the defaults for the current SchemaFolder or Schema instance","readonly":true,"type":[[["Object"]]],"meta":{"line":53,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"paths","description":"Get the paths for the current SchemaFolder or Schema instance","readonly":true,"type":[[["Map","<"],["string",", ("],["SchemaFolder","|"],["SchemaPiece",")>"]]],"meta":{"line":63,"file":"Schema.js","path":"src/library/settings/schema"}}],"methods":[{"name":"add","description":"Adds a Folder or Piece instance to the current SchemaFolder or Schema instance","inherits":"Schema#add","inherited":true,"examples":["// callback is always passed the created folder to encourage chaining\nSchema.add('folder', (folder) => folder.add('piece', 'textchannel'));\n// or\nSchema.add('piece', 'string', { default: 'axolotl!' });"],"params":[{"name":"key","description":"The name of this new piece you are trying to add.","type":[[["string"]]]},{"name":"typeOrCallback","description":"A function to add a folder or a string to add a new SchemaPiece","type":[[["string"]],[["function"]]]},{"name":"options","description":"An object of options used for SchemaPieces","optional":true,"type":[[["SchemaPieceOptions"]]]}],"returns":[[["this"]]],"meta":{"line":83,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"remove","description":"Remove a key from the schema","inherits":"Schema#remove","inherited":true,"params":[{"name":"key","description":"The key to remove","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":133,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"get","description":"Get a SchemaPiece or a SchemaFolder given a path","inherits":"Schema#get","inherited":true,"params":[{"name":"key","description":"The key to get from the schema","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":[[["SchemaPiece"]],[["SchemaFolder"]]],"meta":{"line":144,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"keys","description":"Returns a new Iterator object that contains the keys for each element contained in this folder.\nIdentical to [Map.keys()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/keys)","inherits":"Schema#keys","inherited":true,"params":[{"name":"recursive","description":"Whether the iteration should be recursive","default":false,"type":[[["boolean"]]]}],"generator":true,"meta":{"line":159,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"values","description":"Returns a new Iterator object that contains the values for each element contained in this folder.\nIdentical to [Map.values()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/values)","inherits":"Schema#values","inherited":true,"params":[{"name":"recursive","description":"Whether the iteration should be recursive","default":false,"type":[[["boolean"]]]}],"generator":true,"meta":{"line":177,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"entries","description":"Returns a new Iterator object that contains the `[key, value]` pairs for each element contained in this folder.\nIdentical to [Map.entries()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map/entries)","inherits":"Schema#entries","inherited":true,"params":[{"name":"recursive","description":"Whether the iteration should be recursive","default":false,"type":[[["boolean"]]]}],"generator":true,"meta":{"line":195,"file":"Schema.js","path":"src/library/settings/schema"}},{"name":"toJSON","description":"Get a JSON object containing data from this SchemaFolder","inherits":"Schema#toJSON","inherited":true,"returns":[[["Object"]]],"meta":{"line":211,"file":"Schema.js","path":"src/library/settings/schema"}}],"meta":{"line":8,"file":"SchemaFolder.js","path":"src/library/settings/schema"}},{"name":"SchemaPiece","construct":{"name":"SchemaPiece","description":"Creates our SchemaPiece instance","params":[{"name":"parent","description":"The parent folder or schema for this piece instance","type":[[["SchemaFolder"]],[["Schema"]]]},{"name":"key","description":"The name of this piece instance","type":[[["string"]]]},{"name":"type","description":"The type for this piece instance","type":[[["string"]]]},{"name":"options","description":"The options for this SchemaPiece instance","optional":true,"default":"{}","type":[[["SchemaPieceOptions"]]]}]},"props":[{"name":"Client","description":"The AxolotlClient for this SchemaPiece","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":29,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"parent","description":"The parent of this SchemaPiece, either a SchemaFolder instance or Schema instance","readonly":true,"type":[[["SchemaFolder"]],[["Schema"]]],"meta":{"line":38,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"key","description":"The name of this SchemaPiece instance","readonly":true,"type":[[["string"]]],"meta":{"line":47,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"path","description":"The path of this SchemaPiece instance","readonly":true,"type":[[["string"]]],"meta":{"line":56,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"type","description":"The type this SchemaPiece instance is for","type":[[["string"]]],"meta":{"line":70,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"array","description":"Whether or not this key should hold an array of data, or a single piece of data","type":[[["boolean"]]],"meta":{"line":77,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"default","description":"The default data this key will revert back to if reset, or if the key is never set","type":[["*"]],"meta":{"line":84,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"min","description":"The minimum value for this key.","nullable":true,"type":[[["number"]]],"meta":{"line":91,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"max","description":"The maximum value for this key.","nullable":true,"type":[[["number"]]],"meta":{"line":98,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"configurable","description":"Whether this key should be configurable by the config command. When type is any, this key defaults to false.","type":[[["boolean"]]],"meta":{"line":105,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"filter","description":"The filter to use for this key when resolving.","type":[[["function"]]],"meta":{"line":112,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"serializer","description":"The serializer for this SchemaPiece","readonly":true,"type":[[["Serializer"]]],"meta":{"line":121,"file":"SchemaPiece.js","path":"src/library/settings/schema"}}],"methods":[{"name":"edit","description":"Edit this SchemaPiece's properties","params":[{"name":"options","description":"The options for this SchemaPiece","optional":true,"default":"{}","type":[[["SchemaPieceEditOptions"]]]}],"returns":[[["this"]]],"meta":{"line":131,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"isValid","description":"Checks whether or not this SchemaPiece is valid.","returns":[[["boolean"]]],"meta":{"line":151,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"parse","description":"Parses a value into a resolved format for Settings","params":[{"name":"value","description":"A value to parse","type":[["*"]]},{"name":"guild","description":"A guild to use during parsing.","optional":true,"type":[[["external",":"]]]}],"async":true,"returns":[["*"]],"meta":{"line":187,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"_generateDefault","description":"Generate a default value if none is given","access":"private","returns":[[["Array","<"],["*",">"]],[["false"]],[["null"]]],"meta":{"line":200,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"toJSON","description":"Get a JSON object containing data from this SchemaPiece","returns":[[["Object"]]],"meta":{"line":211,"file":"SchemaPiece.js","path":"src/library/settings/schema"}}],"meta":{"line":28,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"Settings","description":"<warning>Creating your own Settings instances is often discouraged and unneeded. SettingsGateway handles them internally for you.</warning>\nThe Settings class that stores the cache for each entry in SettingsGateway.","construct":{"name":"Settings","params":[{"name":"manager","description":"The Gateway that manages this Settings instance","type":[[["Gateway"]]]},{"name":"data","description":"The data that is cached in this Settings instance","type":[[["Object"]]]}]},"props":[{"name":"client","description":"The client this Settings was created with.","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":48,"file":"Settings.js","path":"src/library/settings"}},{"name":"gateway","description":"The Gateway that manages this Settings instance.","readonly":true,"type":[[["Gateway"]]],"meta":{"line":57,"file":"Settings.js","path":"src/library/settings"}},{"name":"id","description":"The ID that identifies this instance.","readonly":true,"type":[[["string"]]],"meta":{"line":66,"file":"Settings.js","path":"src/library/settings"}},{"name":"_existsInDB","description":"Whether this entry exists in the DB or not.","access":"private","nullable":true,"type":[[["boolean"]]],"meta":{"line":75,"file":"Settings.js","path":"src/library/settings"}},{"name":"synchronizing","description":"Check whether this Settings is being synchronized in the Gateway's sync queue.","type":[[["boolean"]]],"meta":{"line":94,"file":"Settings.js","path":"src/library/settings"}}],"methods":[{"name":"get","description":"Get a value from the configuration. Accepts nested objects separating by dot.","params":[{"name":"path","description":"The path of the key's value to get from this instance","type":[[["string"]],[["Array","<"],["string",">"]]]}],"returns":[["*"]],"meta":{"line":104,"file":"Settings.js","path":"src/library/settings"}},{"name":"clone","description":"Clone this instance.","returns":[[["Settings"]]],"meta":{"line":120,"file":"Settings.js","path":"src/library/settings"}},{"name":"sync","description":"Sync the data from the database with the cache.","params":[{"name":"force","description":"Whether the sync should download from the database","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":[[["Promise","<"],["this",">"]]],"meta":{"line":130,"file":"Settings.js","path":"src/library/settings"}},{"name":"destroy","description":"Delete this entry from the database and cache.","async":true,"returns":[[["this"]]],"meta":{"line":152,"file":"Settings.js","path":"src/library/settings"}},{"name":"reset","description":"Reset a value from an entry.","examples":["// Reset all keys for this instance\nSettings#reset();\n\n// Reset multiple keys for this instance\nSettings#reset(['prefix', 'channels.modlog']);\n\n// Reset a key\nSettings#reset('prefix');"],"params":[{"name":"keys","description":"The key to reset","optional":true,"type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"username","description":"A username instance for multilingual support","optional":true,"type":[[["string"]]]},{"name":"options","description":"The options for the reset","optional":true,"default":"{}","type":[[["SettingsResetOptions"]]]}],"async":true,"returns":[[["SettingsUpdateResult"]]],"meta":{"line":177,"file":"Settings.js","path":"src/library/settings"}},{"name":"update","description":"Update a value from an entry.","examples":["// Updating the value of a key\nSettings#update('roles.administrator', '339943234405007361', message.username);\n\n// Updating an array:\nSettings#update('userBlacklist', '272689325521502208');\n\n// Ensuring the function call adds (error if it exists):\nSettings#update('userBlacklist', '272689325521502208', { action: 'add' });\n\n// Updating it with a json object:\nSettings#update({ roles: { administrator: '339943234405007361' } }, message.username);\n\n// Updating multiple keys (with json object):\nSettings#update({ prefix: 'k!', language: 'es-ES' }, message.username);\n\n// Updating multiple keys (with arrays):\nSettings#update([['prefix', 'k!'], ['language', 'es-ES']]);"],"params":[{"name":"key","description":"The key to modify","type":[[["string"]],[["Object"]]]},{"name":"value","description":"The value to parse and save","optional":true,"type":[["*"]]},{"name":"clientUsername","description":"A username resolvable","optional":true,"type":[[["string"]]]},{"name":"options","description":"The options for the update","optional":true,"default":"{}","type":[[["SettingsUpdateOptions"]]]}],"async":true,"returns":[[["SettingsUpdateResult"]]],"meta":{"line":233,"file":"Settings.js","path":"src/library/settings"}},{"name":"list","description":"Get a list.","params":[{"name":"message","description":"The Message instance","type":[[["string"]]]},{"name":"path","description":"The path to resolve","type":[[["Schema"]],[["string"]]]}],"returns":[[["string"]]],"meta":{"line":272,"file":"Settings.js","path":"src/library/settings"}},{"name":"resolveString","description":"Resolve a string.","access":"private","params":[{"name":"message","description":"The Message to use","type":[[["string"]]]},{"name":"path","description":"The path to resolve","type":[[["SchemaPiece"]],[["string"]]]}],"returns":[[["string"]]],"meta":{"line":308,"file":"Settings.js","path":"src/library/settings"}},{"name":"_update","description":"Update this Settings instance","access":"private","params":[{"name":"entries","description":"The entries to update","type":[[["Array","<"],["Array","<"],["*",">>"]]]},{"name":"username","description":"The username for context in SchemaPiece#parse","nullable":true,"type":[[["string"]]]},{"name":"options","description":"The parse options","type":[[["SettingsUpdateOptions"]]]}],"async":true,"returns":[[["SettingsUpdateResult"]]],"meta":{"line":325,"file":"Settings.js","path":"src/library/settings"}},{"name":"_parse","description":"Parse a value","access":"private","params":[{"name":"value","description":"The value to parse","type":[["*"]]},{"name":"username","description":"The username for context in SchemaPiece#parse","nullable":true,"type":[[["string"]]]},{"name":"options","description":"The parse options","type":[[["SettingsUpdateOptions"]]]},{"name":"result","description":"The updated result","type":[[["SettingsUpdateResult"]]]},{"name":"path","description":"The path result","type":[[["GatewayGetPathResult"]]]}],"async":true,"meta":{"line":364,"file":"Settings.js","path":"src/library/settings"}},{"name":"_save","description":"Save the data to the database.","access":"private","params":[{"name":"result","description":"The data to save","type":[[["SettingsUpdateResult"]]]}],"async":true,"meta":{"line":385,"file":"Settings.js","path":"src/library/settings"}},{"name":"_parseArray","description":"Parse a single value for an array","access":"private","params":[{"name":"piece","description":"The SchemaPiece pointer that parses this entry","type":[[["SchemaPiece"]]]},{"name":"route","description":"The path bits for property accesses","type":[[["Array","<"],["string",">"]]]},{"name":"parsed","description":"The parsed value","type":[["*"]]},{"name":"options","description":"The parse options","type":[[["SettingsUpdateOptions"]]]},{"name":"result","description":"The updated result","type":[[["SettingsUpdateResult"]]]}],"meta":{"line":408,"file":"Settings.js","path":"src/library/settings"}},{"name":"_parseAll","description":"Parse all values from an array","access":"private","params":[{"name":"piece","description":"The SchemaPiece pointer that parses this entry","type":[[["SchemaPiece"]]]},{"name":"values","description":"The values to parse","type":[[["Array","<"],["*",">"]]]},{"name":"username","description":"The username for context in SchemaPiece#parse","nullable":true,"type":[[["username"]]]},{"name":"errors","description":"The Errors array","type":[[["Array","<"],["Error",">"]]]}],"async":true,"returns":[[["Array","<("],["number","|"],["string",")>"]]],"meta":{"line":450,"file":"Settings.js","path":"src/library/settings"}},{"name":"_setValueByPath","description":"Set a value by its path","access":"private","params":[{"name":"piece","description":"The piece that manages the key","type":[[["SchemaPiece"]]]},{"name":"parsedID","description":"The parsed ID value","type":[["*"]]},{"name":"force","description":"Whether this should skip the equality checks or not","type":[[["boolean"]]]}],"returns":[[["Object"]]],"meta":{"line":468,"file":"Settings.js","path":"src/library/settings"}},{"name":"_patch","description":"Path this Settings instance.","access":"private","params":[{"name":"data","description":"The data to patch","type":[[["Object"]]]},{"name":"instance","description":"The reference of this instance for recursion","optional":true,"default":"this","type":[[["Object"]]]},{"name":"schema","description":"The Schema that sets the schema for this configuration's gateway","optional":true,"default":"this.gateway.schema","type":[[["Schema"]]]}],"meta":{"line":490,"file":"Settings.js","path":"src/library/settings"}},{"name":"toJSON","description":"Returns the JSON-compatible object of this instance.","returns":[[["SettingsJSON"]]],"meta":{"line":506,"file":"Settings.js","path":"src/library/settings"}},{"name":"toString","description":"Returns a better string when an instance of this class gets stringified.","returns":[[["string"]]],"meta":{"line":515,"file":"Settings.js","path":"src/library/settings"}}],"meta":{"line":9,"file":"Settings.js","path":"src/library/settings"}},{"name":"AliasPiece","description":"The common class for all pieces with aliases","see":["Command","Argument","Serializer"],"construct":{"name":"AliasPiece","params":[{"name":"store","description":"The store this piece is for","type":[[["Store"]]]},{"name":"file","description":"The path from the pieces folder to the extendable file","type":[[["Array","<"],["string",">"]]]},{"name":"directory","description":"The base directory to the pieces folder","type":[[["string"]]]},{"name":"options","description":"The options for this piece","optional":true,"default":"{}","type":[[["AliasPieceOptions"]]]}]},"props":[{"name":"aliases","description":"The aliases for this piece","type":[[["Array","<"],["string",">"]]],"meta":{"line":31,"file":"AliasPiece.js","path":"src/library/structures/base"}}],"methods":[{"name":"toJSON","description":"Defines the JSON.stringify behavior of this argument.","returns":[[["Object"]]],"meta":{"line":39,"file":"AliasPiece.js","path":"src/library/structures/base"}}],"meta":{"line":9,"file":"AliasPiece.js","path":"src/library/structures/base"}},{"name":"AliasStore","description":"The common base for all stores with aliases","see":["CommandStore","ArgumentStore","SerializerStore"],"extends":[[["Store"]]],"props":[{"name":"aliases","description":"The different aliases that represent the arguments in this store.","type":[[["external",":"]]],"meta":{"line":21,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"get","description":"Returns an AliasPiece in the store if it exists by its name or by an alias.","params":[{"name":"name","description":"A argument or alias name","type":[[["string"]]]}],"returns":{"types":[[["AliasPiece"]]],"nullable":true},"meta":{"line":30,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"has","description":"Returns a boolean if the AliasPiece or alias is found within the store.","params":[{"name":"name","description":"A command or alias name","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":40,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up an AliasPiece in our store.","params":[{"name":"piece","description":"The command piece we are setting up","type":[[["AliasPiece"]]]}],"returns":{"types":[[["AliasPiece"]]],"nullable":true},"meta":{"line":50,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"delete","description":"Deletes an AliasPiece from the store.","params":[{"name":"name","description":"An AliasPiece object or a string representing an AliasPiece or alias name","type":[[["AliasPiece"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":63,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"clear","description":"Clears the AliasPieces and aliases from this store","returns":[[["void"]]],"meta":{"line":75,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","inherits":"Store#load","inherited":true,"params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":11,"file":"AliasStore.js","path":"src/library/structures/base"}},{"name":"BasePiece","description":"The common class for all pieces","see":["Command","Event","Inhibitor","Monitor","Provider","Task"],"construct":{"name":"BasePiece","params":[{"name":"store","description":"The store this piece is for","type":[[["Store"]]]},{"name":"file","description":"The path from the pieces folder to the piece file","type":[[["Array","<"],["string",">"]]]},{"name":"directory","description":"The base directory to the pieces folder","type":[[["string"]]]},{"name":"options","description":"The options for this piece","optional":true,"default":"{}","type":[[["PieceOptions"]]]}]},"props":[{"name":"client","description":"The client this Piece was created with","type":[[["AxolotlClient"]]],"meta":{"line":38,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"file","description":"The file location where this Piece is stored","type":[[["Array","<"],["string",">"]]],"meta":{"line":45,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of the Piece","type":[[["string"]]],"meta":{"line":52,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"enabled","description":"If the Piece is enabled or not","type":[[["boolean"]]],"meta":{"line":59,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"store","description":"The store this Piece is from","type":[[["Store"]]],"meta":{"line":66,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"directory","description":"The base directory this Piece is stored in","type":[[["string"]]],"meta":{"line":73,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"type","description":"The type of Axolotl piece this is","readonly":true,"type":[[["string"]]],"meta":{"line":82,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"path","description":"The absolute path to this piece","readonly":true,"type":[[["string"]]],"meta":{"line":92,"file":"Piece.js","path":"src/library/structures/base"}}],"methods":[{"name":"reload","description":"Reloads this piece","access":"private","async":true,"returns":{"types":[[["BasePiece"]]],"description":"The newly loaded piece"},"meta":{"line":102,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"unload","description":"Unloads this piece","returns":[[["void"]]],"meta":{"line":114,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"disable","description":"Disables this piece","returns":[[["this"]]],"meta":{"line":125,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"enable","description":"Enables this piece","returns":[[["this"]]],"meta":{"line":137,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"init","description":"The init method to be optionally overwritten in actual commands","abstract":true,"async":true,"returns":[["*"]],"meta":{"line":150,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for pieces","returns":{"types":[[["string"]]],"description":"This piece name"},"meta":{"line":159,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"toJSON","description":"Defines the JSON.stringify behavior of this task.","access":"private","returns":[[["Object"]]],"meta":{"line":169,"file":"Piece.js","path":"src/library/structures/base"}}],"meta":{"line":14,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"Store","description":"The common base for all stores","see":["CommandStore","EventStore","InhibitorStore","MonitorStore","ProviderStore","TaskStore"],"extends":[[["external",":"]]],"props":[{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up a piece in our store.","params":[{"name":"piece","description":"The piece we are setting up","type":[[["Piece"]]]}],"returns":[[["Piece"]]],"meta":{"line":133,"file":"Store.js","path":"src/library/structures/base"}},{"name":"delete","description":"Deletes a command from the store.","params":[{"name":"name","description":"A command object or a string representing a command or alias name","type":[[["Piece"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":148,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}},{"name":"walk","description":"Walks our directory of Pieces for the user and core directories.","scope":"static","access":"private","params":[{"name":"store","description":"The store we're loading into","type":[[["Store"]]]},{"name":"directory","description":"The directory to walk in","optional":true,"default":"store.userDirectory","type":[[["string"]]]}],"async":true,"returns":[[["Array","<"],["Piece",">"]]],"meta":{"line":183,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":16,"file":"Store.js","path":"src/library/structures/base"}},{"name":"Command","description":"Base class for all Commands. See {@tutorial CreatingCommands} for more information how to use this class\nto build custom commands.","extends":[[["Piece"]]],"construct":{"name":"Command","params":[{"name":"store","description":"The Command store","type":[[["CommandStore"]]]},{"name":"file","description":"The path from the pieces folder to the command file","type":[[["Array"]]]},{"name":"directory","description":"The base directory to the pieces folder","type":[[["string"]]]},{"name":"options","description":"Optional Command settings","optional":true,"default":"{}","type":[[["CommandOptions"]]]}]},"props":[{"name":"guarded","description":"Whether this command should not be able to be disabled in a guild or not","type":[[["boolean"]]],"meta":{"line":34,"file":"Command.js","path":"src/library/structures"}},{"name":"fullCategory","description":"The full category for the command","type":[[["Array","<"],["string",">"]]],"meta":{"line":41,"file":"Command.js","path":"src/library/structures"}}],"methods":[{"name":"run","description":"The run method to be overwritten in actual commands","abstract":true,"params":[{"name":"message","description":"The command message mapped on top of the message used to trigger this command","type":[[["string"]]]},{"name":"params","description":"The fully resolved parameters based on your usage / usageDelim","type":[[["Array","<"],["any",">"]]]}],"async":true,"returns":{"types":[[["string"]],[["Array","<"],["string",">"]]],"description":"You should return the response message whenever possible"},"meta":{"line":52,"file":"Command.js","path":"src/library/structures"}},{"name":"toJSON","description":"Defines the JSON.stringify behavior of this command.","returns":[[["Object"]]],"meta":{"line":61,"file":"Command.js","path":"src/library/structures"}}],"meta":{"line":9,"file":"Command.js","path":"src/library/structures"}},{"name":"CommandStore","description":"Stores all the commands usable in axolotl","extends":[[["Store"]]],"construct":{"name":"CommandStore","description":"Constructs our CommandStore for use in axolotl","params":[{"name":"client","description":"The axolotl Client","type":[[["AxolotlClient"]]]}]},"props":[{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","inherits":"Store#load","inherited":true,"params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up a piece in our store.","inherits":"Store#set","inherited":true,"params":[{"name":"piece","description":"The piece we are setting up","type":[[["Piece"]]]}],"returns":[[["Piece"]]],"meta":{"line":133,"file":"Store.js","path":"src/library/structures/base"}},{"name":"delete","description":"Deletes a command from the store.","inherits":"Store#delete","inherited":true,"params":[{"name":"name","description":"A command object or a string representing a command or alias name","type":[[["Piece"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":148,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":9,"file":"CommandStore.js","path":"src/library/structures"}},{"name":"Event","description":"Base class for all Events. See {@tutorial CreatingEvents} for more information how to use this class\nto build custom events.","extends":[[["Piece"]]],"construct":{"name":"Event","params":[{"name":"store","description":"The Event Store","type":[[["EventStore"]]]},{"name":"file","description":"The path from the pieces folder to the event file","type":[[["string"]]]},{"name":"directory","description":"The base directory to the pieces folder","type":[[["string"]]]},{"name":"options","description":"Optional Event settings","optional":true,"default":"{}","type":[[["EventOptions"]]]}]},"props":[{"name":"once","description":"If this event should only be run once and then unloaded","type":[[["boolean"]]],"meta":{"line":33,"file":"Event.js","path":"src/library/structures"}},{"name":"emitter","description":"The emitter this event is for","type":[[["EventEmitter"]]],"meta":{"line":40,"file":"Event.js","path":"src/library/structures"}},{"name":"event","description":"The event to listen for","type":[[["string"]]],"meta":{"line":47,"file":"Event.js","path":"src/library/structures"}},{"name":"_listener","description":"Stored bound on method, so it can be properly unlistened to later","access":"private","type":[[["function"]]],"meta":{"line":55,"file":"Event.js","path":"src/library/structures"}}],"methods":[{"name":"run","description":"The run method to be overwritten in actual event handlers","abstract":true,"params":[{"name":"param","description":"The event parameters emitted","type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":65,"file":"Event.js","path":"src/library/structures"}},{"name":"disable","description":"Disables this Event","returns":[[["this"]]],"meta":{"line":76,"file":"Event.js","path":"src/library/structures"}},{"name":"enable","description":"Enables this Event","returns":[[["this"]]],"meta":{"line":87,"file":"Event.js","path":"src/library/structures"}},{"name":"_run","description":"A wrapper for the run method, to easily disable/enable events","access":"private","params":[{"name":"param","description":"The event parameters emitted","type":[["*"]]}],"async":true,"returns":[[["void"]]],"meta":{"line":99,"file":"Event.js","path":"src/library/structures"}},{"name":"_runOnce","description":"A wrapper for the _run method for once handling","access":"private","params":[{"name":"param","description":"The event parameters emitted","type":[["*"]]}],"async":true,"returns":[[["void"]]],"meta":{"line":114,"file":"Event.js","path":"src/library/structures"}},{"name":"_listen","description":"Attaches the proper listener to the emitter","access":"private","returns":[[["void"]]],"meta":{"line":126,"file":"Event.js","path":"src/library/structures"}},{"name":"_unlisten","description":"Removes the listener from the emitter","access":"private","returns":[[["void"]]],"meta":{"line":136,"file":"Event.js","path":"src/library/structures"}},{"name":"toJSON","description":"Defines the JSON.stringify behavior of this extendable.","returns":[[["Object"]]],"meta":{"line":144,"file":"Event.js","path":"src/library/structures"}}],"meta":{"line":9,"file":"Event.js","path":"src/library/structures"}},{"name":"EventStore","description":"Stores all the events that a part of Axolotl","extends":[[["Store"]]],"construct":{"name":"EventStore","description":"Constructs our EventStore for use in Axolotl","params":[{"name":"client","description":"The client initializing this store.","type":[[["AxolotlClient"]]]}]},"props":[{"name":"_onceEvents","description":"Once events that have already run (so once means once)","access":"private","type":[[["Set","<"],["string",">"]]],"meta":{"line":24,"file":"EventStore.js","path":"src/library/structures"}},{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","params":[{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"core","description":"If the file is located in the core directory or not","optional":true,"default":false,"type":[[["boolean"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":34,"file":"EventStore.js","path":"src/library/structures"}},{"name":"clear","description":"Clears the events from the store and removes the listeners.","returns":[[["void"]]],"meta":{"line":44,"file":"EventStore.js","path":"src/library/structures"}},{"name":"delete","description":"Deletes an event from the store.","params":[{"name":"name","description":"An event object or a string representing the event name.","type":[[["Event"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":54,"file":"EventStore.js","path":"src/library/structures"}},{"name":"set","description":"Sets up an event in our store.","params":[{"name":"piece","description":"The event piece we are setting up","type":[[["Event"]]]}],"returns":{"types":[[["Event"]]],"nullable":true},"meta":{"line":67,"file":"EventStore.js","path":"src/library/structures"}},{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":8,"file":"EventStore.js","path":"src/library/structures"}},{"name":"Inhibitor","description":"Base class for all Inhibitors. See {@tutorial CreatingInhibitors} for more information how to use this class\nto build custom inhibitors.","extends":[[["Piece"]]],"construct":{"name":"Inhibitor","params":[{"name":"store","description":"The Inhibitor Store","type":[[["InhibitorStore"]]]},{"name":"file","description":"The path from the pieces folder to the inhibitor file","type":[[["string"]]]},{"name":"directory","description":"The base directory to the pieces folder","type":[[["string"]]]},{"name":"options","description":"Optional Inhibitor settings","optional":true,"default":"{}","type":[[["InhibitorOptions"]]]}]},"props":[{"name":"spamProtection","description":"If this inhibitor is meant for spamProtection (disables the inhibitor while generating help)","type":[[["boolean"]]],"meta":{"line":31,"file":"Inhibitor.js","path":"src/library/structures"}}],"methods":[{"name":"_run","description":"The async wrapper for running inhibitors","access":"private","params":[{"name":"message","description":"The message that triggered this inhibitor","type":[[["string"]]]},{"name":"command","description":"The command to run","type":[[["Command"]]]}],"async":true,"returns":[[["void"]],[["string"]]],"meta":{"line":42,"file":"Inhibitor.js","path":"src/library/structures"}},{"name":"run","description":"The run method to be overwritten in actual inhibitors","abstract":true,"params":[{"name":"message","description":"The message that triggered this inhibitor","type":[[["string"]]]},{"name":"command","description":"The command to run","type":[[["Command"]]]}],"async":true,"returns":[[["void"]],[["string"]]],"meta":{"line":58,"file":"Inhibitor.js","path":"src/library/structures"}},{"name":"toJSON","description":"Defines the JSON.stringify behavior of this inhibitor.","returns":[[["Object"]]],"meta":{"line":67,"file":"Inhibitor.js","path":"src/library/structures"}}],"meta":{"line":9,"file":"Inhibitor.js","path":"src/library/structures"}},{"name":"InhibitorStore","description":"Stores all the inhibitors in Axolotl","extends":[[["Store"]]],"construct":{"name":"InhibitorStore","description":"Constructs our InhibitorStore for use in Axolotl","params":[{"name":"client","description":"The Axolotl Client","type":[[["AxolotlClient"]]]}]},"props":[{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"run","description":"Runs our inhibitors on the command.","params":[{"name":"message","description":"The message object from Discord.js","type":[[["string"]]]},{"name":"command","description":"The command being ran.","type":[[["Command"]]]},{"name":"selective","description":"Whether or not we should ignore certain inhibitors to prevent spam.","optional":true,"default":false,"type":[[["boolean"]]]}],"async":true,"returns":[[["void"]]],"meta":{"line":27,"file":"InhibitorStore.js","path":"src/library/structures"}},{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","inherits":"Store#load","inherited":true,"params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up a piece in our store.","inherits":"Store#set","inherited":true,"params":[{"name":"piece","description":"The piece we are setting up","type":[[["Piece"]]]}],"returns":[[["Piece"]]],"meta":{"line":133,"file":"Store.js","path":"src/library/structures/base"}},{"name":"delete","description":"Deletes a command from the store.","inherits":"Store#delete","inherited":true,"params":[{"name":"name","description":"A command object or a string representing a command or alias name","type":[[["Piece"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":148,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":8,"file":"InhibitorStore.js","path":"src/library/structures"}},{"name":"Monitor","description":"Base class for all  Monitors. See {@tutorial CreatingMonitors} for more information how to use this class\nto build custom monitors.","extends":[[["Piece"]]],"construct":{"name":"Monitor","params":[{"name":"store","description":"The Monitor Store","type":[[["MonitorStore"]]]},{"name":"file","description":"The path from the pieces folder to the monitor file","type":[[["string"]]]},{"name":"directory","description":"The base directory to the pieces folder","type":[[["string"]]]},{"name":"options","description":"Optional Monitor settings","optional":true,"default":"{}","type":[[["MonitorOptions"]]]}]},"props":[{"name":"allowedTypes","description":"The types of messages allowed for this monitor","see":["https://discord.js.org/#/docs/main/master/typedef/MessageType"],"type":[[["Array","<"],["string",">"]]],"meta":{"line":39,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreBots","description":"Whether the monitor ignores bots or not","type":[[["boolean"]]],"meta":{"line":46,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreSelf","description":"Whether the monitor ignores itself or not","type":[[["boolean"]]],"meta":{"line":53,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreOthers","description":"Whether the monitor ignores others or not","type":[[["boolean"]]],"meta":{"line":60,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreWebhooks","description":"Whether the monitor ignores webhooks or not","type":[[["boolean"]]],"meta":{"line":67,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreEdits","description":"Whether the monitor ignores edits or not","type":[[["boolean"]]],"meta":{"line":74,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreBlacklistedUsers","description":"Wether the monitor should ignore blacklisted users","type":[[["boolean"]]],"meta":{"line":81,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ignoreBlacklistedGuilds","description":"Wether the monitor should ignore blacklisted guilds","type":[[["boolean"]]],"meta":{"line":88,"file":"Monitor.js","path":"src/library/structures"}}],"methods":[{"name":"_run","description":"Run a monitor and catch any uncaught promises","access":"private","params":[{"name":"message","description":"The message object from Discord.js","type":[[["string"]]]}],"async":true,"meta":{"line":97,"file":"Monitor.js","path":"src/library/structures"}},{"name":"run","description":"The run method to be overwritten in actual monitor pieces","abstract":true,"params":[{"name":"message","description":"The discord message","type":[[["string"]]]}],"returns":[[["void"]]],"meta":{"line":112,"file":"Monitor.js","path":"src/library/structures"}},{"name":"shouldRun","description":"If the monitor should run based on the filter options","params":[{"name":"message","description":"The message to check","type":[[["string"]]]}],"returns":[[["boolean"]]],"meta":{"line":123,"file":"Monitor.js","path":"src/library/structures"}},{"name":"toJSON","description":"Defines the JSON.stringify behavior of this monitor.","returns":[[["Object"]]],"meta":{"line":139,"file":"Monitor.js","path":"src/library/structures"}}],"meta":{"line":9,"file":"Monitor.js","path":"src/library/structures"}},{"name":"MonitorStore","description":"Stores all monitors for use in Axolotl","extends":[[["Store"]]],"construct":{"name":"MonitorStore","description":"Constructs our MonitorStore for use in Axolotl","params":[{"name":"client","description":"The Axolotl Client","type":[[["AxolotlClient"]]]}]},"props":[{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"run","description":"Runs our monitors on the message.","params":[{"name":"message","description":"The message object from Discord.js","type":[[["string"]]]}],"meta":{"line":24,"file":"MonitorStore.js","path":"src/library/structures"}},{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","inherits":"Store#load","inherited":true,"params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up a piece in our store.","inherits":"Store#set","inherited":true,"params":[{"name":"piece","description":"The piece we are setting up","type":[[["Piece"]]]}],"returns":[[["Piece"]]],"meta":{"line":133,"file":"Store.js","path":"src/library/structures/base"}},{"name":"delete","description":"Deletes a command from the store.","inherits":"Store#delete","inherited":true,"params":[{"name":"name","description":"A command object or a string representing a command or alias name","type":[[["Piece"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":148,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":8,"file":"MonitorStore.js","path":"src/library/structures"}},{"name":"BaseProvider","description":"Base class for all Providers. See {@tutorial CreatingProviders} for more information how to use this class\nto build custom providers.","extends":[[["Piece"]]],"methods":[{"name":"createTable","description":"Inserts or creates a table in the database.","abstract":true,"params":[{"name":"table","description":"The table to check against","type":[[["string"]]]}],"async":true,"returns":[["*"]],"meta":{"line":19,"file":"Provider.js","path":"src/library/structures"}},{"name":"deleteTable","description":"Deletes or drops a table from the database.","abstract":true,"params":[{"name":"table","description":"The table to check against","type":[[["string"]]]}],"async":true,"returns":[["*"]],"meta":{"line":30,"file":"Provider.js","path":"src/library/structures"}},{"name":"hasTable","description":"Checks if a table exists in the database.","abstract":true,"params":[{"name":"table","description":"The table to check against","type":[[["string"]]]}],"async":true,"returns":[[["boolean"]]],"meta":{"line":41,"file":"Provider.js","path":"src/library/structures"}},{"name":"create","description":"Inserts new entries into a table.","abstract":true,"params":[{"name":"table","description":"The table to update","type":[[["string"]]]},{"name":"entryID","description":"The entry's ID to create","type":[[["string"]]]},{"name":"data","description":"The data to insert","type":[[["ProviderResolvable"]]]}],"async":true,"returns":[["*"]],"meta":{"line":54,"file":"Provider.js","path":"src/library/structures"}},{"name":"delete","description":"Removes entries from a table.","abstract":true,"params":[{"name":"table","description":"The table to update","type":[[["string"]]]},{"name":"entryID","description":"The ID of the entry to delete","type":[[["string"]]]}],"async":true,"returns":[["*"]],"meta":{"line":66,"file":"Provider.js","path":"src/library/structures"}},{"name":"get","description":"Retrieve a single entry from a table.","abstract":true,"params":[{"name":"table","description":"The table to query","type":[[["string"]]]},{"name":"entryID","description":"The ID of the entry to retrieve","type":[[["string"]]]}],"async":true,"returns":[[["Object","<"],["string",", "],["*",">"]]],"meta":{"line":78,"file":"Provider.js","path":"src/library/structures"}},{"name":"getAll","description":"Retrieve all entries from a table.","abstract":true,"params":[{"name":"table","description":"The table to query","type":[[["string"]]]}],"async":true,"returns":[[["Array","<"],["Object","<"],["string",", "],["*",">>"]]],"meta":{"line":89,"file":"Provider.js","path":"src/library/structures"}},{"name":"getKeys","description":"Retrieves all entries' keys from a table.","abstract":true,"params":[{"name":"table","description":"The table to query","type":[[["string"]]]}],"async":true,"returns":[[["Array","<"],["string",">"]]],"meta":{"line":100,"file":"Provider.js","path":"src/library/structures"}},{"name":"has","description":"Check if an entry exists in a table.","abstract":true,"params":[{"name":"table","description":"The table to update","type":[[["string"]]]},{"name":"entryID","description":"The entry's ID to check against","type":[[["string"]]]}],"async":true,"returns":[[["boolean"]]],"meta":{"line":112,"file":"Provider.js","path":"src/library/structures"}},{"name":"replace","description":"Overwrites the data from an entry in a table.","abstract":true,"params":[{"name":"table","description":"The table to update","type":[[["string"]]]},{"name":"entryID","description":"The entry's ID to update","type":[[["string"]]]},{"name":"data","description":"The new data for the entry","type":[[["ProviderResolvable"]]]}],"async":true,"returns":[["*"]],"meta":{"line":125,"file":"Provider.js","path":"src/library/structures"}},{"name":"update","description":"Updates an entry from a table.","abstract":true,"params":[{"name":"table","description":"The table to update","type":[[["string"]]]},{"name":"entryID","description":"The entry's ID to update","type":[[["string"]]]},{"name":"data","description":"The data to update","type":[[["ProviderResolvable"]]]}],"async":true,"returns":[["*"]],"meta":{"line":138,"file":"Provider.js","path":"src/library/structures"}},{"name":"shutdown","description":"The shutdown method to be optionally overwritten in actual provider pieces.","abstract":true,"async":true,"returns":[["*"]],"meta":{"line":148,"file":"Provider.js","path":"src/library/structures"}},{"name":"parseUpdateInput","description":"Parse the gateway input for easier operation","access":"protected","params":[{"name":"updated","description":"The updated entries","type":[[["Object","<"],["string",", "],["*",">"]],[["Array","<"],["SettingsUpdateResult",">"]]]}],"returns":[[["Object","<"],["string",", "],["*",">"]]],"meta":{"line":176,"file":"Provider.js","path":"src/library/structures"}}],"meta":{"line":10,"file":"Provider.js","path":"src/library/structures"}},{"name":"ProviderStore","description":"Stores all providers for use in Axolotl","extends":[[["Store"]]],"construct":{"name":"ProviderStore","description":"Constructs our ProviderStore for use in Axolotl","params":[{"name":"client","description":"The Axolotl client","type":[[["AxolotlClient"]]]}]},"props":[{"name":"default","description":"The default provider set in {@link AxolotlClientOptions.providers}","readonly":true,"nullable":true,"type":[[["Provider"]]],"meta":{"line":25,"file":"ProviderStore.js","path":"src/library/structures"}},{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"clear","description":"Clears the providers from the store and waits for them to shutdown.","meta":{"line":33,"file":"ProviderStore.js","path":"src/library/structures"}},{"name":"delete","description":"Deletes a provider from the store","params":[{"name":"name","description":"The provider object or a string representing the structure this store caches","type":[[["Provider"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":43,"file":"ProviderStore.js","path":"src/library/structures"}},{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","inherits":"Store#load","inherited":true,"params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up a piece in our store.","inherits":"Store#set","inherited":true,"params":[{"name":"piece","description":"The piece we are setting up","type":[[["Piece"]]]}],"returns":[[["Piece"]]],"meta":{"line":133,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":8,"file":"ProviderStore.js","path":"src/library/structures"}},{"name":"Task","description":"Base class for all Task pieces. See {@tutorial CreatingTasks} for more information how to use this class\nto build custom tasks.","extends":[[["Piece"]]],"methods":[{"name":"run","description":"The run method to be overwritten in actual Task pieces","abstract":true,"params":[{"name":"data","description":"The data from the ScheduledTask instance","type":[["*"]]}],"async":true,"returns":[[["void"]]],"meta":{"line":18,"file":"Task.js","path":"src/library/structures"}}],"meta":{"line":9,"file":"Task.js","path":"src/library/structures"}},{"name":"TaskStore","description":"Stores all task pieces for use in Axolotl","extends":[[["Store"]]],"construct":{"name":"TaskStore","description":"Constructs our TaskStore for use in Axolotl","params":[{"name":"client","description":"The Axolotl client","type":[[["AxolotlClient"]]]}]},"props":[{"name":"client","description":"The client this Store was created with","readonly":true,"type":[[["AxolotlClient"]]],"meta":{"line":21,"file":"Store.js","path":"src/library/structures/base"}},{"name":"name","description":"The name of what this holds","readonly":true,"type":[[["string"]]],"meta":{"line":30,"file":"Store.js","path":"src/library/structures/base"}},{"name":"holds","description":"The type of structure this store holds","readonly":true,"type":[[["Piece"]]],"meta":{"line":39,"file":"Store.js","path":"src/library/structures/base"}},{"name":"coreDirectories","description":"The core directories pieces of this store can hold","access":"private","readonly":true,"type":[[["Set","<"],["string",">"]]],"meta":{"line":48,"file":"Store.js","path":"src/library/structures/base"}},{"name":"userDirectory","description":"The directory of local pieces relative to where you run Axolotl from.","readonly":true,"type":[[["string"]]],"meta":{"line":65,"file":"Store.js","path":"src/library/structures/base"}}],"methods":[{"name":"registerCoreDirectory","description":"Registers a core directory to check for pieces","access":"protected","inherits":"Store#registerCoreDirectory","inherited":true,"params":[{"name":"directory","description":"The directory to check for core pieces","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":76,"file":"Store.js","path":"src/library/structures/base"}},{"name":"init","description":"Initializes all pieces in this store.","inherits":"Store#init","inherited":true,"returns":[[["Promise","<"],["Array","<"],["*",">>"]]],"meta":{"line":86,"file":"Store.js","path":"src/library/structures/base"}},{"name":"load","description":"Loads a piece into Axolotl so it can be saved in this store.","inherits":"Store#load","inherited":true,"params":[{"name":"directory","description":"The directory the file is located in","type":[[["string"]]]},{"name":"file","description":"A string or array of strings showing where the file is located.","type":[[["Array","<"],["string",">"]]]}],"returns":{"types":[[["Piece"]]],"nullable":true},"meta":{"line":97,"file":"Store.js","path":"src/library/structures/base"}},{"name":"loadAll","description":"Loads all of our Pieces from both the user and core directories.","inherits":"Store#loadAll","inherited":true,"async":true,"returns":{"types":[[["number"]]],"description":"The number of Pieces loaded."},"meta":{"line":118,"file":"Store.js","path":"src/library/structures/base"}},{"name":"set","description":"Sets up a piece in our store.","inherits":"Store#set","inherited":true,"params":[{"name":"piece","description":"The piece we are setting up","type":[[["Piece"]]]}],"returns":[[["Piece"]]],"meta":{"line":133,"file":"Store.js","path":"src/library/structures/base"}},{"name":"delete","description":"Deletes a command from the store.","inherits":"Store#delete","inherited":true,"params":[{"name":"name","description":"A command object or a string representing a command or alias name","type":[[["Piece"]],[["string"]]]}],"returns":{"types":[[["boolean"]]],"description":"whether or not the delete was successful."},"meta":{"line":148,"file":"Store.js","path":"src/library/structures/base"}},{"name":"resolve","description":"Resolve a string or piece into a piece object.","inherits":"Store#resolve","inherited":true,"params":[{"name":"name","description":"The piece object or a string representing a piece's name","type":[[["Piece"]],[["string"]]]}],"returns":[[["Piece"]]],"meta":{"line":161,"file":"Store.js","path":"src/library/structures/base"}},{"name":"toString","description":"Defines toString behavior for stores","inherits":"Store#toString","inherited":true,"returns":{"types":[[["string"]]],"description":"This store name"},"meta":{"line":171,"file":"Store.js","path":"src/library/structures/base"}}],"meta":{"line":8,"file":"TaskStore.js","path":"src/library/structures"}},{"name":"AxolotlConsole","description":"Axolotl's console class, extends NodeJS Console class.","construct":{"name":"AxolotlConsole","description":"Constructs our Axolotl instance","params":[{"name":"options","description":"The options for the Axolotl Console","optional":true,"type":[[["ConsoleOptions"]]]}]},"props":[{"name":"stdout","description":"The standard output stream for this console, defaulted to process.stderr.","readonly":true,"type":[[["NodeJSWritableStream"]]],"meta":{"line":98,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"stderr","description":"The standard error output stream for this console, defaulted to process.stderr.","readonly":true,"type":[[["NodeJSWritableStream"]]],"meta":{"line":107,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"template","description":"Whether or not timestamps should be enabled for this console.","nullable":true,"type":[[["Timestamp"]]],"meta":{"line":123,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"colors","description":"The colors for this console.","type":[[["object"]]],"meta":{"line":130,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"utc","description":"Whether the timestamp should be in utc or not","type":[[["boolean"]]],"meta":{"line":142,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"timestamp","description":"The timestamp to use","access":"private","type":[[["string"]]],"meta":{"line":150,"file":"AxolotlConsole.js","path":"src/library/util"}}],"methods":[{"name":"write","description":"Logs everything to the console/writable stream.","access":"private","params":[{"name":"data","description":"The data we want to print","type":[[["Array","<"],["*",">"]]]},{"name":"type","description":"The type of log, particularly useful for coloring","optional":true,"default":"\"log\"","type":[[["string"]]]}],"meta":{"line":161,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"log","description":"Calls a log write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":175,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"warn","description":"Calls a warn write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":185,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"error","description":"Calls an error write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":195,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"debug","description":"Calls a debug write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":205,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"verbose","description":"Calls a verbose write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":215,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"wtf","description":"Calls a wtf (what a terrible failure) write with everything to the console/writable stream.","params":[{"name":"data","description":"The data we want to print","variable":true,"type":[["*"]]}],"returns":[[["void"]]],"meta":{"line":225,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"_flatten","description":"Flattens our data into a readable string.","scope":"static","access":"private","params":[{"name":"data","description":"Some data to flatten","type":[["*"]]}],"returns":[[["string"]]],"meta":{"line":236,"file":"AxolotlConsole.js","path":"src/library/util"}}],"meta":{"line":11,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"Colors","description":"The Colors class that manages the colors displayed in the console.","construct":{"name":"Colors","description":"Constructs our Colors instance","params":[{"name":"options","description":"The options for this format","optional":true,"default":"{}","type":[[["ColorsFormatOptions"]]]}]},"props":[{"name":"opening","description":"The opening tags","type":[[["string"]]],"meta":{"line":33,"file":"Colors.js","path":"src/library/util"}},{"name":"closing","description":"The closing tags","type":[[["string"]]],"meta":{"line":40,"file":"Colors.js","path":"src/library/util"}},{"name":"useColors","description":"Determines if this class should be constructed with colors or not","scope":"static","access":"private","nullable":true,"type":[[["boolean"]]],"meta":{"line":114,"file":"Colors.js","path":"src/library/util"}},{"name":"CLOSE","description":"The close codes","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":122,"file":"Colors.js","path":"src/library/util"}},{"name":"STYLES","description":"The style codes","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":141,"file":"Colors.js","path":"src/library/util"}},{"name":"TEXTS","description":"The text codes","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":158,"file":"Colors.js","path":"src/library/util"}},{"name":"BACKGROUNDS","description":"The background codes","scope":"static","access":"private","type":[[["object"]]],"meta":{"line":185,"file":"Colors.js","path":"src/library/util"}}],"methods":[{"name":"format","description":"Format a string","params":[{"name":"string","description":"The string to format","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":49,"file":"Colors.js","path":"src/library/util"}},{"name":"style","description":"Apply the style","scope":"static","access":"private","params":[{"name":"styles","description":"The style or styles to apply","optional":true,"type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"data","description":"The data","optional":true,"default":"{}","type":[[["ColorsFormatData"]]]}],"returns":[[["ColorsFormatData"]]],"meta":{"line":61,"file":"Colors.js","path":"src/library/util"}},{"name":"background","description":"Apply the background","scope":"static","access":"private","params":[{"name":"background","description":"The background to apply","optional":true,"type":[[["string"]]]},{"name":"data","description":"The data","optional":true,"default":"{}","type":[[["ColorsFormatData"]]]}],"returns":[[["ColorsFormatData"]]],"meta":{"line":82,"file":"Colors.js","path":"src/library/util"}},{"name":"text","description":"Apply the text format","scope":"static","access":"private","params":[{"name":"text","description":"The text format to apply","optional":true,"type":[[["string"]]]},{"name":"data","description":"The data","optional":true,"default":"{}","type":[[["ColorsFormatData"]]]}],"returns":[[["ColorsFormatData"]]],"meta":{"line":98,"file":"Colors.js","path":"src/library/util"}}],"meta":{"line":4,"file":"Colors.js","path":"src/library/util"}},{"name":"Cron","description":"Handles Cron strings and generates dates based on the cron string provided.","see":["https://en.wikipedia.org/wiki/Cron"],"construct":{"name":"Cron","params":[{"name":"cron","description":"The cron pattern to use","type":[[["string"]]]}]},"methods":[{"name":"next","description":"Get the next date that matches with the current pattern","params":[{"name":"outset","description":"The Date instance to compare with","optional":true,"default":"new Date()","type":[[["Date"]]]},{"name":"origin","description":"Whether this next call is origin","optional":true,"default":true,"type":[[["boolean"]]]}],"returns":[[["Date"]]],"meta":{"line":26,"file":"Cron.js","path":"src/library/util"}},{"name":"_normalize","description":"Normalize the pattern","scope":"static","access":"private","params":[{"name":"cron","description":"The pattern to normalize","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":52,"file":"Cron.js","path":"src/library/util"}},{"name":"_parseString","description":"Parse the pattern","scope":"static","access":"private","params":[{"name":"cron","description":"The pattern to parse","type":[[["string"]]]}],"returns":[[["Array","<"],["Array","<"],["number",">>"]]],"meta":{"line":78,"file":"Cron.js","path":"src/library/util"}},{"name":"_parsePart","description":"Parse the current part","scope":"static","access":"private","params":[{"name":"cronPart","description":"The part of the pattern to parse","type":[[["string"]]]},{"name":"id","description":"The id that identifies the current part","type":[[["number"]]]}],"returns":[[["Array","<"],["number",">"]]],"meta":{"line":92,"file":"Cron.js","path":"src/library/util"}},{"name":"_range","description":"Get an array of numbers with the selected range","scope":"static","access":"private","params":[{"name":"min","description":"The minimum value","type":[[["number"]]]},{"name":"max","description":"The maximum value","type":[[["number"]]]},{"name":"step","description":"The step value","type":[[["number"]]]}],"returns":[[["Array","<"],["number",">"]]],"meta":{"line":116,"file":"Cron.js","path":"src/library/util"}}],"meta":{"line":7,"file":"Cron.js","path":"src/library/util"}},{"name":"Duration","description":"Converts duration strings into ms and future dates","construct":{"name":"Duration","description":"Create a new Duration instance","params":[{"name":"pattern","description":"The string to parse","type":[[["string"]]]}]},"props":[{"name":"offset","description":"The offset","type":[[["number"]]],"meta":{"line":65,"file":"Duration.js","path":"src/library/util"}},{"name":"fromNow","description":"Get the date from now","readonly":true,"type":[[["Date"]]],"meta":{"line":74,"file":"Duration.js","path":"src/library/util"}},{"name":"regex","description":"The RegExp used for the pattern parsing","scope":"static","access":"private","type":[[["RegExp"]]],"meta":{"line":160,"file":"Duration.js","path":"src/library/util"}},{"name":"commas","description":"The RegExp used for removing commas","scope":"static","access":"private","type":[[["RegExp"]]],"meta":{"line":169,"file":"Duration.js","path":"src/library/util"}},{"name":"aan","description":"The RegExp used for replacing a/an with 1","scope":"static","access":"private","type":[[["RegExp"]]],"meta":{"line":178,"file":"Duration.js","path":"src/library/util"}}],"methods":[{"name":"dateFrom","description":"Get the date from","params":[{"name":"date","description":"The Date instance to get the date from","type":[[["Date"]]]}],"returns":[[["Date"]]],"meta":{"line":84,"file":"Duration.js","path":"src/library/util"}},{"name":"_parse","description":"Parse the pattern","scope":"static","access":"private","params":[{"name":"pattern","description":"The pattern to parse","type":[[["string"]]]}],"returns":[[["number"]]],"meta":{"line":95,"file":"Duration.js","path":"src/library/util"}},{"name":"toNow","description":"Shows the user friendly duration of time between a period and now.","scope":"static","params":[{"name":"earlier","description":"The time to compare","type":[[["Date"]],[["number"]],[["string"]]]},{"name":"showIn","description":"Whether the output should be prefixed","optional":true,"type":[[["boolean"]]]}],"returns":[[["string"]]],"meta":{"line":120,"file":"Duration.js","path":"src/library/util"}}],"meta":{"line":52,"file":"Duration.js","path":"src/library/util"}},{"name":"Stopwatch","description":"Stopwatch class, uses native node to replicate/extend previous performance now dependency.","construct":{"name":"Stopwatch","description":"Starts a new Stopwatch","params":[{"name":"digits","description":"The number of digits to appear after the decimal point when returning the friendly duration","optional":true,"default":2,"type":[[["number"]]]}]},"props":[{"name":"digits","description":"The number of digits to appear after the decimal point when returning the friendly duration.","type":[[["number"]]],"meta":{"line":19,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"_start","description":"The start time of this stopwatch","access":"private","type":[[["number"]]],"meta":{"line":27,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"_end","description":"The end time of this stopwatch","access":"private","nullable":true,"type":[[["number"]]],"meta":{"line":35,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"duration","description":"The duration of this stopwatch since start or start to end if this stopwatch has stopped.","readonly":true,"type":[[["number"]]],"meta":{"line":44,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"running","description":"If the stopwatch is running or not","readonly":true,"type":[[["boolean"]]],"meta":{"line":54,"file":"Stopwatch.js","path":"src/library/util"}}],"methods":[{"name":"restart","description":"Restarts the Stopwatch (Returns a running state)","returns":[[["this"]]],"meta":{"line":64,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"reset","description":"Resets the Stopwatch to 0 duration (Returns a stopped state)","returns":[[["this"]]],"meta":{"line":76,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"start","description":"Starts the Stopwatch","returns":[[["this"]]],"meta":{"line":88,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"stop","description":"Stops the Stopwatch, freezing the duration","returns":[[["this"]]],"meta":{"line":102,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"toString","description":"Defines toString behavior","returns":[[["string"]]],"meta":{"line":112,"file":"Stopwatch.js","path":"src/library/util"}}],"meta":{"line":6,"file":"Stopwatch.js","path":"src/library/util"}},{"name":"Timestamp","description":"Timestamp class, parses the pattern once, displays the desired Date or UNIX timestamp with the selected pattern.","construct":{"name":"Timestamp","description":"Starts a new Timestamp and parses the pattern.","params":[{"name":"pattern","description":"The pattern to parse","type":[[["string"]]]}]},"props":[{"name":"pattern","description":"The raw pattern","type":[[["string"]]],"meta":{"line":97,"file":"Timestamp.js","path":"src/library/util"}},{"name":"_template","access":"private","type":[[["Array","<"],["TimestampObject",">"]]],"meta":{"line":104,"file":"Timestamp.js","path":"src/library/util"}},{"name":"timezoneOffset","description":"The timezone offset in seconds.","scope":"static","type":[[["number"]]],"meta":{"line":235,"file":"Timestamp.js","path":"src/library/util"}}],"methods":[{"name":"display","description":"Display the current date with the current pattern.","params":[{"name":"time","description":"The time to display","optional":true,"default":"new Date()","type":[[["Date"]],[["number"]],[["string"]]]}],"returns":[[["string"]]],"meta":{"line":113,"file":"Timestamp.js","path":"src/library/util"}},{"name":"displayUTC","description":"Display the current date utc with the current pattern.","params":[{"name":"time","description":"The time to display in utc","optional":true,"default":"new Date()","type":[[["Date"]],[["number"]],[["string"]]]}],"returns":[[["string"]]],"meta":{"line":123,"file":"Timestamp.js","path":"src/library/util"}},{"name":"edit","description":"Edits the current pattern.","params":[{"name":"pattern","description":"The new pattern for this instance","type":[[["string"]]]}],"returns":[[["this"]]],"meta":{"line":134,"file":"Timestamp.js","path":"src/library/util"}},{"name":"toString","description":"Defines the toString behavior of Timestamp.","returns":[[["string"]]],"meta":{"line":144,"file":"Timestamp.js","path":"src/library/util"}},{"name":"displayArbitrary","description":"Display the current date with the current pattern.","scope":"static","params":[{"name":"pattern","description":"The pattern to parse","type":[[["string"]]]},{"name":"time","description":"The time to display","optional":true,"default":"new Date()","type":[[["Date"]],[["number"]],[["string"]]]}],"returns":[[["string"]]],"meta":{"line":155,"file":"Timestamp.js","path":"src/library/util"}},{"name":"utc","description":"Creates a UTC Date object to work with.","scope":"static","params":[{"name":"time","description":"The date to convert to utc","optional":true,"default":"new Date()","type":[[["Date"]],[["number"]],[["string"]]]}],"returns":[[["Date"]]],"meta":{"line":165,"file":"Timestamp.js","path":"src/library/util"}},{"name":"_display","description":"Display the current date with the current pattern.","scope":"static","access":"private","params":[{"name":"template","description":"The pattern to parse","type":[[["string"]]]},{"name":"time","description":"The time to display","type":[[["Date"]],[["number"]],[["string"]]]}],"returns":[[["string"]]],"meta":{"line":178,"file":"Timestamp.js","path":"src/library/util"}},{"name":"_patch","description":"Parses the pattern.","scope":"static","access":"private","params":[{"name":"pattern","description":"The pattern to parse","type":[[["string"]]]}],"returns":[[["Array","<"],["TimestampObject",">"]]],"meta":{"line":192,"file":"Timestamp.js","path":"src/library/util"}},{"name":"_resolveDate","description":"Resolves a date.","scope":"static","access":"private","params":[{"name":"time","description":"The time to parse","type":[[["Date"]],[["number"]],[["string"]]]}],"returns":[[["Date"]]],"meta":{"line":223,"file":"Timestamp.js","path":"src/library/util"}}],"meta":{"line":78,"file":"Timestamp.js","path":"src/library/util"}},{"name":"Type","description":"The class for deep checking Types","construct":{"name":"Type","params":[{"name":"value","description":"The value to generate a deep Type of","type":[["*"]]},{"name":"parent","description":"The parent value used in recursion","optional":true,"default":null,"type":[[["Type"]]]}]},"props":[{"name":"value","description":"The value to generate a deep Type of","type":[["*"]],"meta":{"line":18,"file":"Type.js","path":"src/library/util"}},{"name":"is","description":"The shallow type of this","type":[[["string"]]],"meta":{"line":25,"file":"Type.js","path":"src/library/util"}},{"name":"parent","description":"The parent of this type","access":"private","nullable":true,"type":[[["Type"]]],"meta":{"line":33,"file":"Type.js","path":"src/library/util"}},{"name":"childKeys","description":"The child keys of this Type","access":"private","type":[[["Map","<"],["string",", "],["Type",">"]]],"meta":{"line":41,"file":"Type.js","path":"src/library/util"}},{"name":"childValues","description":"The child values of this Type","access":"private","type":[[["Map","<"],["string",", "],["Type",">"]]],"meta":{"line":49,"file":"Type.js","path":"src/library/util"}},{"name":"childTypes","description":"The type string for the children of this Type","access":"private","readonly":true,"type":[[["string"]]],"meta":{"line":59,"file":"Type.js","path":"src/library/util"}}],"methods":[{"name":"toString","description":"The full type string generated.","returns":[[["string"]]],"meta":{"line":69,"file":"Type.js","path":"src/library/util"}},{"name":"addValue","description":"The subtype to create based on this.value's sub value.","access":"private","params":[{"name":"value","description":"The sub value","type":[["*"]]}],"meta":{"line":80,"file":"Type.js","path":"src/library/util"}},{"name":"addEntry","description":"The subtype to create based on this.value's entries.","access":"private","params":[{"name":"entry","description":"the entry","type":[[["Array","<"],["string",", "],["*",">"]]]}],"meta":{"line":91,"file":"Type.js","path":"src/library/util"}},{"name":"parents","description":"Walks the linked list backwards, for checking circulars.","access":"private","generator":true,"meta":{"line":103,"file":"Type.js","path":"src/library/util"}},{"name":"check","description":"Get the deep type name that defines the input.","access":"private","meta":{"line":115,"file":"Type.js","path":"src/library/util"}},{"name":"isCircular","description":"Checks if the value of this Type is a circular reference to any parent.","access":"private","returns":[[["boolean"]]],"meta":{"line":132,"file":"Type.js","path":"src/library/util"}},{"name":"resolve","description":"Resolves the type name that defines the input.","scope":"static","params":[{"name":"value","description":"The value to get the type name of","type":[["*"]]}],"returns":[[["string"]]],"meta":{"line":143,"file":"Type.js","path":"src/library/util"}},{"name":"list","description":"Joins the list of child types.","scope":"static","access":"private","params":[{"name":"values","description":"The values to list","type":[[["Map","<"],["string",", "],["Type",">"]]]}],"returns":[[["string"]]],"meta":{"line":160,"file":"Type.js","path":"src/library/util"}}],"meta":{"line":6,"file":"Type.js","path":"src/library/util"}},{"name":"Util","description":"Contains static methods to be used throughout the bot.","access":"private","construct":{"name":"Util","description":"This class may not be initiated with new"},"props":[{"name":"PRIMITIVE_TYPES","description":"The primitive types","scope":"static","type":[[["Array","<"],["string",">"]]],"meta":{"line":234,"file":"Util.js","path":"src/library/util"}}],"methods":[{"name":"toTitleCase","description":"Converts a string to Title Case","scope":"static","params":[{"name":"text","description":"The text to  title case.","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":27,"file":"Util.js","path":"src/library/util"}},{"name":"regExpEsc","description":"Cleans a string from regex injection","scope":"static","params":[{"name":"str","description":"The string to clean","type":[[["string"]]]}],"returns":[[["string"]]],"meta":{"line":37,"file":"Util.js","path":"src/library/util"}},{"name":"mergeObjects","description":"Merges two objects","scope":"static","params":[{"name":"objTarget","description":"The object to be merged","type":[["*"]]},{"name":"objSource","description":"The object to merge","type":[["*"]]}],"returns":[["*"]],"meta":{"line":48,"file":"Util.js","path":"src/library/util"}},{"name":"deepClone","description":"Deep clone a value","scope":"static","params":[{"name":"source","description":"The object to clone","type":[["*"]]}],"returns":[["*"]],"meta":{"line":59,"file":"Util.js","path":"src/library/util"}},{"name":"isFunction","description":"Verify if the input is a function.","scope":"static","params":[{"name":"input","description":"The function to verify","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":91,"file":"Util.js","path":"src/library/util"}},{"name":"isClass","description":"Verify if the input is a class constructor.","scope":"static","params":[{"name":"input","description":"The function to verify","type":[[["function"]]]}],"returns":[[["boolean"]]],"meta":{"line":101,"file":"Util.js","path":"src/library/util"}},{"name":"isObject","description":"Verify if the input is an object literal (or class).","scope":"static","params":[{"name":"input","description":"The object to verify","type":[[["Object"]]]}],"returns":[[["boolean"]]],"meta":{"line":113,"file":"Util.js","path":"src/library/util"}},{"name":"isNumber","description":"Verify if a number is a finite number.","scope":"static","params":[{"name":"input","description":"The number to verify","type":[[["number"]]]}],"returns":[[["boolean"]]],"meta":{"line":123,"file":"Util.js","path":"src/library/util"}},{"name":"isPrimitive","description":"Check whether a value is a primitive","scope":"static","params":[{"name":"value","description":"The value to check","type":[["*"]]}],"returns":[[["boolean"]]],"meta":{"line":133,"file":"Util.js","path":"src/library/util"}},{"name":"isThenable","description":"Verify if an object is a promise.","scope":"static","params":[{"name":"input","description":"The promise to verify","type":[[["Promise"]]]}],"returns":[[["boolean"]]],"meta":{"line":143,"file":"Util.js","path":"src/library/util"}},{"name":"mergeDefault","description":"Sets default properties on an object that aren't already specified.","scope":"static","access":"private","params":[{"name":"def","description":"Default properties","type":[[["Object"]]]},{"name":"given","description":"Object to assign defaults to","optional":true,"type":[[["Object"]]]}],"returns":[[["Object"]]],"meta":{"line":157,"file":"Util.js","path":"src/library/util"}},{"name":"arraysStrictEquals","description":"Compare if both arrays are strictly equal","scope":"static","params":[{"name":"arr1","description":"The first array to compare","type":[[["Array","<"],["any",">"]]]},{"name":"arr2","description":"The second array to compare","type":[[["Array","<"],["any",">"]]]}],"returns":[[["boolean"]]],"meta":{"line":174,"file":"Util.js","path":"src/library/util"}},{"name":"objectToTuples","description":"Convert an object to a tuple","scope":"static","params":[{"name":"object","description":"The object to convert","type":[[["Object","<"],["string",", "],["*",">"]]]},{"name":"prefix","description":"The prefix for the key","optional":true,"default":"''","type":[[["string"]]]}],"returns":[[["Array","<"],["Array","<"],["*",">>"]]],"meta":{"line":191,"file":"Util.js","path":"src/library/util"}},{"name":"exec","description":"Promisified version of child_process.exec for use with await","scope":"static","params":[{"name":"command","description":"The command to run","type":[[["string"]]]},{"name":"options","description":"The options to pass to exec","optional":true,"type":[[["external",":"]]]}],"returns":[[["Promise","<{"],["stdout",": "],["string",", "],["stderr",": "],["string","}>"]]],"meta":{"line":215,"file":"Util.js","path":"src/library/util"}},{"name":"sleep","description":"Promisified version of setTimeout for use with await","scope":"static","params":[{"name":"delay","description":"The amount of time in ms to delay","type":[[["number"]]]},{"name":"args","description":"Any args to pass to the .then (mostly pointless in this form)","optional":true,"type":[["*"]]}],"returns":{"types":[[["Promise","<"],["*",">"]]],"description":"The args value passed in"},"meta":{"line":226,"file":"Util.js","path":"src/library/util"}}],"meta":{"line":9,"file":"Util.js","path":"src/library/util"}},{"name":"JsonProvider","description":"JSON provider that provides json-based storage at a atomic level.","extends":[[["Provider"]]],"methods":[{"name":"init","description":"Initializes the database","access":"private","async":true,"meta":{"line":21,"file":"json.js","path":"src/providers"}},{"name":"hasTable","description":"Checks if a directory exists.","params":[{"name":"table","description":"The name of the table you want to check","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":32,"file":"json.js","path":"src/providers"}},{"name":"createTable","description":"Creates a new directory.","params":[{"name":"table","description":"The name for the new directory","type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":41,"file":"json.js","path":"src/providers"}},{"name":"deleteTable","description":"Recursively deletes a directory.","params":[{"name":"table","description":"The directory's name to delete","type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":50,"file":"json.js","path":"src/providers"}},{"name":"getAll","description":"Get all documents from a directory.","params":[{"name":"table","description":"The name of the directory to fetch from","type":[[["string"]]]},{"name":"entries","description":"The entries to download, defaults to all keys in the directory","optional":true,"type":[[["Array","<"],["string",">"]]]}],"async":true,"returns":[[["Array","<"],["Object",">"]]],"meta":{"line":63,"file":"json.js","path":"src/providers"}},{"name":"getKeys","description":"Get all document names from a directory, filter by json.","params":[{"name":"table","description":"The name of the directory to fetch from","type":[[["string"]]]}],"async":true,"returns":[[["Array","<"],["string",">"]]],"meta":{"line":80,"file":"json.js","path":"src/providers"}},{"name":"get","description":"Get a document from a directory.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]},{"name":"id","description":"The document name","type":[[["string"]]]}],"returns":[[["Promise","<?"],["Object",">"]]],"meta":{"line":96,"file":"json.js","path":"src/providers"}},{"name":"has","description":"Check if the document exists.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]},{"name":"id","description":"The document name","type":[[["string"]]]}],"returns":[[["Promise","<"],["boolean",">"]]],"meta":{"line":106,"file":"json.js","path":"src/providers"}},{"name":"getRandom","description":"Get a random document from a directory.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]}],"returns":[[["Promise","<"],["Object",">"]]],"meta":{"line":115,"file":"json.js","path":"src/providers"}},{"name":"create","description":"Insert a new document into a directory.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]},{"name":"document","description":"The document name","type":[[["string"]]]},{"name":"data","description":"The object with all properties you want to insert into the document","type":[[["Object"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":126,"file":"json.js","path":"src/providers"}},{"name":"update","description":"Update a document from a directory.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]},{"name":"document","description":"The document name","type":[[["string"]]]},{"name":"data","description":"The object with all the properties you want to update","type":[[["Object"]]]}],"async":true,"returns":[[["void"]]],"meta":{"line":137,"file":"json.js","path":"src/providers"}},{"name":"replace","description":"Replace all the data from a document.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]},{"name":"document","description":"The document name","type":[[["string"]]]},{"name":"data","description":"The new data for the document","type":[[["Object"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":149,"file":"json.js","path":"src/providers"}},{"name":"delete","description":"Delete a document from the table.","params":[{"name":"table","description":"The name of the directory","type":[[["string"]]]},{"name":"document","description":"The document name","type":[[["string"]]]}],"returns":[[["Promise","<"],["void",">"]]],"meta":{"line":159,"file":"json.js","path":"src/providers"}}],"meta":{"line":10,"file":"json.js","path":"src/providers"}}],"interfaces":[],"typedefs":[{"name":"ReadyMessage","description":"Defaulted as `Successfully initialized. Logged in as ${this.username}.`.","type":[[["string"]],[["function"]]],"meta":{"line":25,"file":"Client.js","path":"src/library"}},{"name":"AxolotlClientOptions","type":[[["external",":"]]],"props":[{"name":"commandLogging","description":"Whether the bot should log command usage.","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"consoleEvents","description":"Options to pass to the Console Client","optional":true,"default":"{}","type":[[["ConsoleEvents"]]]},{"name":"consoleOptions","description":"Console options to pass to the client.","optional":true,"default":"{}","type":[[["ConsoleOptions"]]]},{"name":"createPiecesFolder","description":"Should axolotl create folders for each piece at start up.","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"disabledCorePieces","description":"An array of disabled core piece types, e.g. ['commands', 'events']","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]},{"name":"owners","description":"A list of minecraft usernames that are allowed full access to your bot. It is generally not a good idea to give access to accounts you share.","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]},{"name":"pieceDefaults","description":"Overrides all of the defaults for those pieces.","optional":true,"default":"{}","type":[[["PieceDefaults"]]]},{"name":"prefix","description":"The default prefix the bot should respond to.","optional":true,"type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"production","description":"Whether the bot should handle unhandled promise rejections automatically (handles when false) (also can be configured with process.env.NODE_ENV)","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"readyMessage","description":"The message to be logged when the client is ready","optional":true,"type":[[["ReadyMessage"]]]},{"name":"regexPrefix","description":"The regular expression version of a prefix if one is provided.","optional":true,"type":[[["RegExp"]]]},{"name":"schedule","description":"Options for the internal clock module for scheduling.","optional":true,"default":"{}","type":[[["ScheduleOptions"]]]},{"name":"prefixCaseINsensitive","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":30,"file":"Client.js","path":"src/library"}},{"name":"ScheduleOptions","type":[[["Object"]]],"props":[{"name":"interval","description":"The interval in milliseconds for the clock to check the tasks","optional":true,"default":60000,"type":[[["number"]]]}],"meta":{"line":47,"file":"Client.js","path":"src/library"}},{"name":"ConsoleEvents","type":[[["Object"]]],"props":[{"name":"debug","description":"If the debug event should be enabled by default","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"error","description":"If the error event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"log","description":"If the log event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"verbose","description":"If the verbose event should be enabled by default","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"warn","description":"If the warn event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"wtf","description":"If the wtf event should be enabled by default","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":52,"file":"Client.js","path":"src/library"}},{"name":"PieceDefaults","type":[[["object"]]],"props":[{"name":"commands","optional":true,"default":"{}","type":[[["CommandOptions"]]]},{"name":"events","optional":true,"default":"{}","type":[[["EventOptions"]]]},{"name":"monitors","optional":true,"default":"{}","type":[[["MonitorOptions"]]]},{"name":"inhibitors","optional":true,"default":"{}","type":[[["InhibitorOptions"]]]},{"name":"providers","optional":true,"default":"{}","type":[[["ProviderOptions"]]]},{"name":"tasks","optional":true,"default":"{}","type":[[["TaskOptions"]]]}],"meta":{"line":62,"file":"Client.js","path":"src/library"}},{"name":"ScheduledTaskOptions","type":[[["Object"]]],"props":[{"name":"id","description":"The ID for the task. By default, it generates one in base36","optional":true,"type":[[["string"]]]},{"name":"catchUp","description":"If the task should try to catch up if the bot is down","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"data","description":"The data to pass to the Task piece when the ScheduledTask is ready for execution","optional":true,"type":[["*"]]}],"meta":{"line":13,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"TimeResolvable","type":[[["Date"]],[["number"]],[["Cron"]],[["string"]]],"meta":{"line":9,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"ScheduledTaskUpdateOptions","type":[[["Object"]]],"props":[{"name":"time","description":"The time or {@link Cron} pattern","optional":true,"type":[[["TimeResolvable"]]]},{"name":"catchUp","description":"If the task should try to catch up if the bot is down","optional":true,"type":[[["boolean"]]]},{"name":"data","description":"The data to pass to the Task piece when the ScheduledTask is ready for execution","optional":true,"type":[["*"]]}],"meta":{"line":20,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"ScheduledTaskJSON","type":[[["Object"]]],"props":[{"name":"id","description":"The task's ID","type":[[["string"]]]},{"name":"taskName","description":"The name of the Task piece this will execute","type":[[["string"]]]},{"name":"time","description":"The UNIX timestamp for when this task ends at","type":[[["number"]]]},{"name":"catchUp","description":"If the task should try to catch up if the bot is down","type":[[["boolean"]]]},{"name":"repeat","description":"The {@link Cron} pattern","optional":true,"type":[[["string"]]]},{"name":"data","description":"The data to pass to the Task piece when the ScheduledTask is ready for execution","type":[[["Object","<"],["string",", "],["*",">"]]]}],"meta":{"line":27,"file":"ScheduledTask.js","path":"src/library/schedule"}},{"name":"GatewayDriverRegisterOptions","type":[[["Object"]]],"props":[{"name":"provider","description":"The name of the provider to use","optional":true,"default":"this.client.options.providers.default","type":[[["string"]]]},{"name":"schema","description":"The schema to use for this gateway.","optional":true,"type":[[["Schema"]]]},{"name":"syncArg","description":"The sync args to pass to Gateway#sync during Gateway init","optional":true,"type":[[["string"]],[["Array","<"],["string",">"]],[["true"]]]}],"meta":{"line":10,"file":"GatewayDriver.js","path":"src/library/settings"}},{"name":"GatewayGetPathOptions","type":[[["Object"]]],"props":[{"name":"avoidUnconfigurable","description":"Whether the getPath should avoid unconfigurable keys","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"piece","description":"Whether the getPath should return pieces or folders","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":3,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"GatewayGetPathResult","type":[[["Object"]]],"props":[{"name":"piece","description":"The piece resolved from the path","type":[[["SchemaPiece"]]]},{"name":"route","description":"The resolved path split by dots","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":9,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"GatewayJSON","type":[[["Object"]]],"props":[{"name":"type","description":"The name of this gateway","type":[[["string"]]]},{"name":"options","description":"The options for this gateway","type":[[["GatewayDriverRegisterOptions"]]]},{"name":"schema","description":"The current schema","type":[[["Object"]]]}],"meta":{"line":15,"file":"GatewayStorage.js","path":"src/library/settings"}},{"name":"SchemaPieceOptions","type":[[["Object"]]],"props":[{"name":"default","description":"The default value for the key","optional":true,"type":[["*"]]},{"name":"filter","description":"The filter to use when resolving this key. The function is passed the resolved value from the resolver, and a guild.","optional":true,"type":[[["function"]]]},{"name":"array","description":"Whether the key should be stored as Array or not","optional":true,"type":[[["boolean"]]]},{"name":"configurable","description":"Whether the key should be configurable by the configuration command or not","optional":true,"type":[[["boolean"]]]},{"name":"min","description":"The minimum value for this piece","optional":true,"type":[[["number"]]]},{"name":"max","description":"The maximum value for this piece","optional":true,"type":[[["number"]]]}],"meta":{"line":5,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"SchemaPieceEditOptions","type":[[["SchemaPieceOptions"]]],"props":[{"name":"type","description":"The new type for this SchemaPiece","optional":true,"type":[[["string"]]]}],"meta":{"line":15,"file":"SchemaPiece.js","path":"src/library/settings/schema"}},{"name":"SettingsJSON","type":[[["Object"]]],"meta":{"line":11,"file":"Settings.js","path":"src/library/settings"}},{"name":"SettingsUpdateResult","type":[[["Object"]]],"props":[{"name":"errors","description":"The errors caught from parsing","type":[[["Array","<"],["Error",">"]]]},{"name":"updated","description":"The updated keys","type":[[["Array","<"],["SettingsUpdateResultEntry",">"]]]}],"meta":{"line":15,"file":"Settings.js","path":"src/library/settings"}},{"name":"SettingsUpdateResultEntry","type":[[["Object"]]],"props":[{"name":"data","description":"A tuple containing the path of the updated key and the new value","type":[[["Array","<"],["any",">"]]]},{"name":"piece","description":"The SchemaPiece instance that manages the updated key","type":[[["SchemaPiece"]]]}],"meta":{"line":21,"file":"Settings.js","path":"src/library/settings"}},{"name":"SettingsUpdateOptions","type":[[["Object"]]],"props":[{"name":"avoidUnconfigurable","description":"Whether the update should avoid unconfigurable keys","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"action","description":"Whether the update (when using arrays) should add or remove,\nleave it as 'auto' to add or remove depending on the existence of the key in the array","optional":true,"default":"'auto'","type":[[["add","'"]],[["remove","'"]],[["auto","'"]],[["overwrite","'"]]]},{"name":"arrayPosition","description":"The position of the array to replace","optional":true,"default":null,"type":[[["number"]]]},{"name":"force","description":"Whether this should skip the equality checks or not","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":27,"file":"Settings.js","path":"src/library/settings"}},{"name":"SettingsResetOptions","type":[[["Object"]]],"props":[{"name":"avoidUnconfigurable","description":"Whether the update should avoid unconfigurable keys","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"force","description":"Whether this should skip the equality checks or not","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":36,"file":"Settings.js","path":"src/library/settings"}},{"name":"AliasPieceOptions","type":[[["PieceOptions"]]],"props":[{"name":"aliases","description":"The aliases for this piece","optional":true,"default":"[]","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":11,"file":"AliasPiece.js","path":"src/library/structures/base"}},{"name":"PieceOptions","type":[[["Object"]]],"props":[{"name":"name","description":"The name of the event","optional":true,"default":"theFileName","type":[[["string"]]]},{"name":"enabled","description":"Whether the event is enabled or not","optional":true,"default":true,"type":[[["boolean"]]]}],"meta":{"line":16,"file":"Piece.js","path":"src/library/structures/base"}},{"name":"CommandOptions","type":[[["PieceOptions"]]],"props":[{"name":"description","description":"The help description for the command","optional":true,"default":"''","type":[[["string"]],[["function"]]]},{"name":"guarded","description":"If the command can be disabled on a guild level (does not effect global disable)","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Command.js","path":"src/library/structures"}},{"name":"EventOptions","type":[[["PieceOptions"]]],"props":[{"name":"once","description":"If this event should only be run once and then unloaded","optional":true,"default":false,"type":[[["boolean"]]]},{"name":"emitter","description":"The emitter this event should be for (string indicates a client property)","optional":true,"default":"this.client","type":[[["EventEmitter"]],[["string"]]]},{"name":"event","description":"The event that should be listened to","optional":true,"default":"this.name","type":[[["string"]]]}],"meta":{"line":11,"file":"Event.js","path":"src/library/structures"}},{"name":"InhibitorOptions","type":[[["PieceOptions"]]],"props":[{"name":"spamProtection","description":"If this inhibitor is meant for spamProtection (disables the inhibitor while generating help)","optional":true,"default":false,"type":[[["boolean"]]]}],"meta":{"line":11,"file":"Inhibitor.js","path":"src/library/structures"}},{"name":"MonitorOptions","type":[[["PieceOptions"]]],"props":[{"name":"ignoreBots","description":"Whether the monitor ignores bots or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreSelf","description":"Whether the monitor ignores itself or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreOthers","description":"Whether the monitor ignores others or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreWebhooks","description":"Whether the monitor ignores webhooks or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreEdits","description":"Whether the monitor ignores edits or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreBlacklistedUsers","description":"Wether the monitor should ignore blacklisted users or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"ignoreBlacklistedGuilds","description":"Wether the monitor should ignore blacklisted guilds or not","optional":true,"default":true,"type":[[["boolean"]]]},{"name":"allowedTypes","description":"The types of messages allowed for this monitor","optional":true,"default":"['DEFAULT']","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":11,"file":"Monitor.js","path":"src/library/structures"}},{"name":"ConsoleOptions","type":[[["Object"]]],"props":[{"name":"colors","description":"The console color styles","optional":true,"type":[[["ConsoleColorStyles"]]]},{"name":"stdout","description":"The WritableStream for the output logs","optional":true,"type":[[["NodeJSWritableStream"]]]},{"name":"stderr","description":"The WritableStream for the error logs","optional":true,"type":[[["NodeJSWritableStream"]]]},{"name":"timestamps","description":"If false, it won't use timestamps. Otherwise it will use 'YYYY-MM-DD HH:mm:ss' if true or custom if string is given","optional":true,"type":[[["boolean"]],[["string"]]]},{"name":"useColor","description":"Whether the timestamps should use colours","optional":true,"type":[[["boolean"]]]},{"name":"utc","description":"If the timestamps should be in utc","optional":true,"type":[[["boolean"]]]}],"meta":{"line":13,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ConsoleColorStyles","description":"Time is for the timestamp of the log, message is for the actual output.","type":[[["Object"]]],"props":[{"name":"debug","description":"An object containing a message and time color object","type":[[["ConsoleColorObjects"]]]},{"name":"error","description":"An object containing a message and time color object","type":[[["ConsoleColorObjects"]]]},{"name":"log","description":"An object containing a message and time color object","type":[[["ConsoleColorObjects"]]]},{"name":"verbose","description":"An object containing a message and time color object","type":[[["ConsoleColorObjects"]]]},{"name":"warn","description":"An object containing a message and time color object","type":[[["ConsoleColorObjects"]]]},{"name":"wtf","description":"An object containing a message and time Color Object","type":[[["ConsoleColorObjects"]]]}],"meta":{"line":23,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ConsoleColorObjects","type":[[["Object"]]],"props":[{"name":"type","description":"The method from Console this color object should call","optional":true,"default":"'log'","type":[[["string"]]]},{"name":"message","description":"A message object containing colors and styles","type":[[["ConsoleMessageObject"]]]},{"name":"time","description":"A time object containing colors and styles","type":[[["ConsoleTimeObject"]]]}],"meta":{"line":33,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ConsoleMessageObject","type":[[["Object"]]],"props":[{"name":"background","description":"The background color. Can be a basic string like \"red\", a hex string, or a RGB array","type":[[["ConsoleColorTypes"]]]},{"name":"text","description":"The text color. Can be a basic string like \"red\", a hex string, or a RGB array","type":[[["ConsoleColorTypes"]]]},{"name":"style","description":"A style string from ConsoleStyleTypes","type":[[["ConsoleStyleTypes"]]]}],"meta":{"line":40,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ConsoleTimeObject","type":[[["Object"]]],"props":[{"name":"background","description":"The background color. Can be a basic string like \"red\", a hex string, or a RGB array","type":[[["ConsoleColorTypes"]]]},{"name":"text","description":"The text color. Can be a basic string like \"red\", a hex string, a RGB array, or HSL array","type":[[["ConsoleColorTypes"]]]},{"name":"style","description":"A style string from ConsoleStyleTypes","type":[[["ConsoleStyleTypes"]]]}],"meta":{"line":47,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ConsoleColorTypes","description":"All the valid color types.","type":[[["Object"]]],"props":[{"name":"black","description":"The black colour","type":[[["string"]]]},{"name":"red","description":"The red colour","type":[[["string"]]]},{"name":"green","description":"The green colour","type":[[["string"]]]},{"name":"yellow","description":"The yellow colour","type":[[["string"]]]},{"name":"blue","description":"The blue colour","type":[[["string"]]]},{"name":"magenta","description":"The magenta colour","type":[[["string"]]]},{"name":"cyan","description":"The cyan colour","type":[[["string"]]]},{"name":"gray","description":"The gray colour","type":[[["string"]]]},{"name":"grey","description":"The grey colour (alias for gray)","type":[[["string"]]]},{"name":"lightgray","description":"The light gray colour","type":[[["string"]]]},{"name":"lightgrey","description":"The light grey colour (alias for light gray)","type":[[["string"]]]},{"name":"lightred","description":"The light red colour","type":[[["string"]]]},{"name":"lightgreen","description":"The light green colour","type":[[["string"]]]},{"name":"lightyellow","description":"The light yellow colour","type":[[["string"]]]},{"name":"lightblue","description":"The light blue colour","type":[[["string"]]]},{"name":"lightmagenta","description":"The light magenta colour","type":[[["string"]]]},{"name":"lightcyan","description":"The light cyan colour","type":[[["string"]]]},{"name":"white","description":"The white colour","type":[[["string"]]]}],"meta":{"line":54,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ConsoleStyleTypes","type":[[["Object"]]],"props":[{"name":"normal","description":"Default style","type":[[["string"]]]},{"name":"bold","description":"Bold style. May appear with a lighter colour in many terminals","type":[[["string"]]]},{"name":"dim","description":"Dim style","type":[[["string"]]]},{"name":"italic","description":"Italic style","type":[[["string"]]]},{"name":"underline","description":"Underline style","type":[[["string"]]]},{"name":"inverse","description":"Inverse colours style","type":[[["string"]]]},{"name":"hidden","description":"Hidden text style","type":[[["string"]]]},{"name":"strikethrough","description":"Strikethrough text style","type":[[["string"]]]}],"meta":{"line":76,"file":"AxolotlConsole.js","path":"src/library/util"}},{"name":"ColorsFormatOptions","type":[[["Object"]]],"props":[{"name":"style","description":"The style or styles to apply","optional":true,"type":[[["string"]],[["Array","<"],["string",">"]]]},{"name":"background","description":"The format for the background","optional":true,"type":[[["string"]]]},{"name":"text","description":"The format for the text","optional":true,"type":[[["string"]]]}],"meta":{"line":6,"file":"Colors.js","path":"src/library/util"}},{"name":"ColorsFormatData","access":"private","type":[[["Object"]]],"props":[{"name":"opening","description":"The opening format data styles","type":[[["Array","<"],["string",">"]]]},{"name":"closing","description":"The closing format data styles","type":[[["Array","<"],["string",">"]]]}],"meta":{"line":13,"file":"Colors.js","path":"src/library/util"}},{"name":"TimestampObject","type":[[["Object"]]],"props":[{"name":"type","description":"The type of the current variable","type":[[["string"]]]},{"name":"content","description":"The content of the type. Only accessible if the type is 'literal'","optional":true,"type":[[["string"]]]}],"meta":{"line":80,"file":"Timestamp.js","path":"src/library/util"}}],"externals":[{"name":"ExecOptions","see":["{@link https://nodejs.org/dist/latest-v10.x/docs/api/child_process.html#child_process_child_process_exec_command_options_callback}"],"meta":{"line":48,"file":"index.js","path":"src"}},{"name":"Collection","see":["{@link https://discord.js.org/#/docs/main/master/class/Collection}"],"meta":{"line":52,"file":"index.js","path":"src"}}]}